"use strict";(self.webpackChunkaxds_wp_plugins=self.webpackChunkaxds_wp_plugins||[]).push([[528],{2902:(t,n,e)=>{function r(t,n){return null==t||null==n?NaN:t<n?-1:t>n?1:t>=n?0:NaN}e.d(n,{A:()=>r})},321:(t,n,e)=>{e.d(n,{A:()=>o});var r=e(2902);function i(t,n){return null==t||null==n?NaN:n<t?-1:n>t?1:n>=t?0:NaN}function o(t){let n,e,o;function a(t,r,i=0,o=t.length){if(i<o){if(0!==n(r,r))return o;do{const n=i+o>>>1;e(t[n],r)<0?i=n+1:o=n}while(i<o)}return i}return 2!==t.length?(n=r.A,e=(n,e)=>(0,r.A)(t(n),e),o=(n,e)=>t(n)-e):(n=t===r.A||t===i?t:u,e=t,o=t),{left:a,center:function(t,n,e=0,r=t.length){const i=a(t,n,e,r-1);return i>e&&o(t[i-1],n)>-o(t[i],n)?i-1:i},right:function(t,r,i=0,o=t.length){if(i<o){if(0!==n(r,r))return o;do{const n=i+o>>>1;e(t[n],r)<=0?i=n+1:o=n}while(i<o)}return i}}}function u(){return 0}},1907:(t,n,e)=>{function r(t,n){let e=0;if(void 0===n)for(let n of t)(n=+n)&&(e+=n);else{let r=-1;for(let i of t)(i=+n(i,++r,t))&&(e+=i)}return e}e.d(n,{A:()=>r})},6946:(t,n,e)=>{e.d(n,{Ay:()=>a,lq:()=>s,sG:()=>l});const r=Math.sqrt(50),i=Math.sqrt(10),o=Math.sqrt(2);function u(t,n,e){const a=(n-t)/Math.max(0,e),s=Math.floor(Math.log10(a)),l=a/Math.pow(10,s),c=l>=r?10:l>=i?5:l>=o?2:1;let h,f,p;return s<0?(p=Math.pow(10,-s)/c,h=Math.round(t*p),f=Math.round(n*p),h/p<t&&++h,f/p>n&&--f,p=-p):(p=Math.pow(10,s)*c,h=Math.round(t/p),f=Math.round(n/p),h*p<t&&++h,f*p>n&&--f),f<h&&.5<=e&&e<2?u(t,n,2*e):[h,f,p]}function a(t,n,e){if(!((e=+e)>0))return[];if((t=+t)==(n=+n))return[t];const r=n<t,[i,o,a]=r?u(n,t,e):u(t,n,e);if(!(o>=i))return[];const s=o-i+1,l=new Array(s);if(r)if(a<0)for(let t=0;t<s;++t)l[t]=(o-t)/-a;else for(let t=0;t<s;++t)l[t]=(o-t)*a;else if(a<0)for(let t=0;t<s;++t)l[t]=(i+t)/-a;else for(let t=0;t<s;++t)l[t]=(i+t)*a;return l}function s(t,n,e){return u(t=+t,n=+n,e=+e)[2]}function l(t,n,e){e=+e;const r=(n=+n)<(t=+t),i=r?s(n,t,e):s(t,n,e);return(r?-1:1)*(i<0?1/-i:i)}},90:(t,n,e)=>{function r(t){return t}e.d(n,{l7:()=>y,V4:()=>d,eH:()=>g});var i=1,o=2,u=3,a=4,s=1e-6;function l(t){return"translate("+t+",0)"}function c(t){return"translate(0,"+t+")"}function h(t){return n=>+t(n)}function f(t,n){return n=Math.max(0,t.bandwidth()-2*n)/2,t.round()&&(n=Math.round(n)),e=>+t(e)+n}function p(){return!this.__axis}function _(t,n){var e=[],_=null,g=null,y=6,d=6,v=3,m="undefined"!=typeof window&&window.devicePixelRatio>1?0:.5,w=t===i||t===a?-1:1,x=t===a||t===o?"x":"y",A=t===i||t===u?l:c;function M(l){var c=null==_?n.ticks?n.ticks.apply(n,e):n.domain():_,M=null==g?n.tickFormat?n.tickFormat.apply(n,e):r:g,b=Math.max(y,0)+v,T=n.range(),k=+T[0]+m,C=+T[T.length-1]+m,N=(n.bandwidth?f:h)(n.copy(),m),$=l.selection?l.selection():l,S=$.selectAll(".domain").data([null]),D=$.selectAll(".tick").data(c,n).order(),U=D.exit(),E=D.enter().append("g").attr("class","tick"),Y=D.select("line"),F=D.select("text");S=S.merge(S.enter().insert("path",".tick").attr("class","domain").attr("stroke","currentColor")),D=D.merge(E),Y=Y.merge(E.append("line").attr("stroke","currentColor").attr(x+"2",w*y)),F=F.merge(E.append("text").attr("fill","currentColor").attr(x,w*b).attr("dy",t===i?"0em":t===u?"0.71em":"0.32em")),l!==$&&(S=S.transition(l),D=D.transition(l),Y=Y.transition(l),F=F.transition(l),U=U.transition(l).attr("opacity",s).attr("transform",(function(t){return isFinite(t=N(t))?A(t+m):this.getAttribute("transform")})),E.attr("opacity",s).attr("transform",(function(t){var n=this.parentNode.__axis;return A((n&&isFinite(n=n(t))?n:N(t))+m)}))),U.remove(),S.attr("d",t===a||t===o?d?"M"+w*d+","+k+"H"+m+"V"+C+"H"+w*d:"M"+m+","+k+"V"+C:d?"M"+k+","+w*d+"V"+m+"H"+C+"V"+w*d:"M"+k+","+m+"H"+C),D.attr("opacity",1).attr("transform",(function(t){return A(N(t)+m)})),Y.attr(x+"2",w*y),F.attr(x,w*b).text(M),$.filter(p).attr("fill","none").attr("font-size",10).attr("font-family","sans-serif").attr("text-anchor",t===o?"start":t===a?"end":"middle"),$.each((function(){this.__axis=N}))}return M.scale=function(t){return arguments.length?(n=t,M):n},M.ticks=function(){return e=Array.from(arguments),M},M.tickArguments=function(t){return arguments.length?(e=null==t?[]:Array.from(t),M):e.slice()},M.tickValues=function(t){return arguments.length?(_=null==t?null:Array.from(t),M):_&&_.slice()},M.tickFormat=function(t){return arguments.length?(g=t,M):g},M.tickSize=function(t){return arguments.length?(y=d=+t,M):y},M.tickSizeInner=function(t){return arguments.length?(y=+t,M):y},M.tickSizeOuter=function(t){return arguments.length?(d=+t,M):d},M.tickPadding=function(t){return arguments.length?(v=+t,M):v},M.offset=function(t){return arguments.length?(m=+t,M):m},M}function g(t){return _(o,t)}function y(t){return _(u,t)}function d(t){return _(a,t)}},5315:(t,n,e)=>{function r(t,n,e){t.prototype=n.prototype=e,e.constructor=t}function i(t,n){var e=Object.create(t.prototype);for(var r in n)e[r]=n[r];return e}function o(){}e.d(n,{Ay:()=>x,Qh:()=>b});var u=.7,a=1/u,s="\\s*([+-]?\\d+)\\s*",l="\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)\\s*",c="\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)%\\s*",h=/^#([0-9a-f]{3,8})$/,f=new RegExp(`^rgb\\(${s},${s},${s}\\)$`),p=new RegExp(`^rgb\\(${c},${c},${c}\\)$`),_=new RegExp(`^rgba\\(${s},${s},${s},${l}\\)$`),g=new RegExp(`^rgba\\(${c},${c},${c},${l}\\)$`),y=new RegExp(`^hsl\\(${l},${c},${c}\\)$`),d=new RegExp(`^hsla\\(${l},${c},${c},${l}\\)$`),v={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};function m(){return this.rgb().formatHex()}function w(){return this.rgb().formatRgb()}function x(t){var n,e;return t=(t+"").trim().toLowerCase(),(n=h.exec(t))?(e=n[1].length,n=parseInt(n[1],16),6===e?A(n):3===e?new T(n>>8&15|n>>4&240,n>>4&15|240&n,(15&n)<<4|15&n,1):8===e?M(n>>24&255,n>>16&255,n>>8&255,(255&n)/255):4===e?M(n>>12&15|n>>8&240,n>>8&15|n>>4&240,n>>4&15|240&n,((15&n)<<4|15&n)/255):null):(n=f.exec(t))?new T(n[1],n[2],n[3],1):(n=p.exec(t))?new T(255*n[1]/100,255*n[2]/100,255*n[3]/100,1):(n=_.exec(t))?M(n[1],n[2],n[3],n[4]):(n=g.exec(t))?M(255*n[1]/100,255*n[2]/100,255*n[3]/100,n[4]):(n=y.exec(t))?D(n[1],n[2]/100,n[3]/100,1):(n=d.exec(t))?D(n[1],n[2]/100,n[3]/100,n[4]):v.hasOwnProperty(t)?A(v[t]):"transparent"===t?new T(NaN,NaN,NaN,0):null}function A(t){return new T(t>>16&255,t>>8&255,255&t,1)}function M(t,n,e,r){return r<=0&&(t=n=e=NaN),new T(t,n,e,r)}function b(t,n,e,r){return 1===arguments.length?((i=t)instanceof o||(i=x(i)),i?new T((i=i.rgb()).r,i.g,i.b,i.opacity):new T):new T(t,n,e,null==r?1:r);var i}function T(t,n,e,r){this.r=+t,this.g=+n,this.b=+e,this.opacity=+r}function k(){return`#${S(this.r)}${S(this.g)}${S(this.b)}`}function C(){const t=N(this.opacity);return`${1===t?"rgb(":"rgba("}${$(this.r)}, ${$(this.g)}, ${$(this.b)}${1===t?")":`, ${t})`}`}function N(t){return isNaN(t)?1:Math.max(0,Math.min(1,t))}function $(t){return Math.max(0,Math.min(255,Math.round(t)||0))}function S(t){return((t=$(t))<16?"0":"")+t.toString(16)}function D(t,n,e,r){return r<=0?t=n=e=NaN:e<=0||e>=1?t=n=NaN:n<=0&&(t=NaN),new E(t,n,e,r)}function U(t){if(t instanceof E)return new E(t.h,t.s,t.l,t.opacity);if(t instanceof o||(t=x(t)),!t)return new E;if(t instanceof E)return t;var n=(t=t.rgb()).r/255,e=t.g/255,r=t.b/255,i=Math.min(n,e,r),u=Math.max(n,e,r),a=NaN,s=u-i,l=(u+i)/2;return s?(a=n===u?(e-r)/s+6*(e<r):e===u?(r-n)/s+2:(n-e)/s+4,s/=l<.5?u+i:2-u-i,a*=60):s=l>0&&l<1?0:a,new E(a,s,l,t.opacity)}function E(t,n,e,r){this.h=+t,this.s=+n,this.l=+e,this.opacity=+r}function Y(t){return(t=(t||0)%360)<0?t+360:t}function F(t){return Math.max(0,Math.min(1,t||0))}function H(t,n,e){return 255*(t<60?n+(e-n)*t/60:t<180?e:t<240?n+(e-n)*(240-t)/60:n)}r(o,x,{copy(t){return Object.assign(new this.constructor,this,t)},displayable(){return this.rgb().displayable()},hex:m,formatHex:m,formatHex8:function(){return this.rgb().formatHex8()},formatHsl:function(){return U(this).formatHsl()},formatRgb:w,toString:w}),r(T,b,i(o,{brighter(t){return t=null==t?a:Math.pow(a,t),new T(this.r*t,this.g*t,this.b*t,this.opacity)},darker(t){return t=null==t?u:Math.pow(u,t),new T(this.r*t,this.g*t,this.b*t,this.opacity)},rgb(){return this},clamp(){return new T($(this.r),$(this.g),$(this.b),N(this.opacity))},displayable(){return-.5<=this.r&&this.r<255.5&&-.5<=this.g&&this.g<255.5&&-.5<=this.b&&this.b<255.5&&0<=this.opacity&&this.opacity<=1},hex:k,formatHex:k,formatHex8:function(){return`#${S(this.r)}${S(this.g)}${S(this.b)}${S(255*(isNaN(this.opacity)?1:this.opacity))}`},formatRgb:C,toString:C})),r(E,(function(t,n,e,r){return 1===arguments.length?U(t):new E(t,n,e,null==r?1:r)}),i(o,{brighter(t){return t=null==t?a:Math.pow(a,t),new E(this.h,this.s,this.l*t,this.opacity)},darker(t){return t=null==t?u:Math.pow(u,t),new E(this.h,this.s,this.l*t,this.opacity)},rgb(){var t=this.h%360+360*(this.h<0),n=isNaN(t)||isNaN(this.s)?0:this.s,e=this.l,r=e+(e<.5?e:1-e)*n,i=2*e-r;return new T(H(t>=240?t-240:t+120,i,r),H(t,i,r),H(t<120?t+240:t-120,i,r),this.opacity)},clamp(){return new E(Y(this.h),F(this.s),F(this.l),N(this.opacity))},displayable(){return(0<=this.s&&this.s<=1||isNaN(this.s))&&0<=this.l&&this.l<=1&&0<=this.opacity&&this.opacity<=1},formatHsl(){const t=N(this.opacity);return`${1===t?"hsl(":"hsla("}${Y(this.h)}, ${100*F(this.s)}%, ${100*F(this.l)}%${1===t?")":`, ${t})`}`}}))},3116:(t,n,e)=>{e.d(n,{A:()=>r});const r=t=>()=>t},8981:(t,n,e)=>{function r(t,n){return t=+t,n=+n,function(e){return t*(1-e)+n*e}}e.d(n,{A:()=>r})},3377:(t,n,e)=>{e.d(n,{Ay:()=>a});var r=e(5315);function i(t,n,e,r,i){var o=t*t,u=o*t;return((1-3*t+3*o-u)*n+(4-6*o+3*u)*e+(1+3*t+3*o-3*u)*r+u*i)/6}var o=e(3116);function u(t,n){var e=n-t;return e?function(t,n){return function(e){return t+e*n}}(t,e):(0,o.A)(isNaN(t)?n:t)}const a=function t(n){var e=function(t){return 1==(t=+t)?u:function(n,e){return e-n?function(t,n,e){return t=Math.pow(t,e),n=Math.pow(n,e)-t,e=1/e,function(r){return Math.pow(t+r*n,e)}}(n,e,t):(0,o.A)(isNaN(n)?e:n)}}(n);function i(t,n){var i=e((t=(0,r.Qh)(t)).r,(n=(0,r.Qh)(n)).r),o=e(t.g,n.g),a=e(t.b,n.b),s=u(t.opacity,n.opacity);return function(n){return t.r=i(n),t.g=o(n),t.b=a(n),t.opacity=s(n),t+""}}return i.gamma=t,i}(1);function s(t){return function(n){var e,i,o=n.length,u=new Array(o),a=new Array(o),s=new Array(o);for(e=0;e<o;++e)i=(0,r.Qh)(n[e]),u[e]=i.r||0,a[e]=i.g||0,s[e]=i.b||0;return u=t(u),a=t(a),s=t(s),i.opacity=1,function(t){return i.r=u(t),i.g=a(t),i.b=s(t),i+""}}}s((function(t){var n=t.length-1;return function(e){var r=e<=0?e=0:e>=1?(e=1,n-1):Math.floor(e*n),o=t[r],u=t[r+1],a=r>0?t[r-1]:2*o-u,s=r<n-1?t[r+2]:2*u-o;return i((e-r/n)*n,a,o,u,s)}})),s((function(t){var n=t.length;return function(e){var r=Math.floor(((e%=1)<0?++e:e)*n),o=t[(r+n-1)%n],u=t[r%n],a=t[(r+1)%n],s=t[(r+2)%n];return i((e-r/n)*n,o,u,a,s)}}))},7737:(t,n,e)=>{e.d(n,{A:()=>u});var r=e(8981),i=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,o=new RegExp(i.source,"g");function u(t,n){var e,u,a,s=i.lastIndex=o.lastIndex=0,l=-1,c=[],h=[];for(t+="",n+="";(e=i.exec(t))&&(u=o.exec(n));)(a=u.index)>s&&(a=n.slice(s,a),c[l]?c[l]+=a:c[++l]=a),(e=e[0])===(u=u[0])?c[l]?c[l]+=u:c[++l]=u:(c[++l]=null,h.push({i:l,x:(0,r.A)(e,u)})),s=o.lastIndex;return s<n.length&&(a=n.slice(s),c[l]?c[l]+=a:c[++l]=a),c.length<2?h[0]?function(t){return function(n){return t(n)+""}}(h[0].x):function(t){return function(){return t}}(n):(n=h.length,function(t){for(var e,r=0;r<n;++r)c[(e=h[r]).i]=e.x(t);return c.join("")})}},6627:(t,n,e)=>{e.d(n,{C:()=>T,Ay:()=>k});var r=e(2902),i=e(321);const o=(0,i.A)(r.A),u=o.right,a=(o.left,(0,i.A)((function(t){return null===t?NaN:+t})).center,u);var s=e(5315),l=e(3377);function c(t,n){var e,r=n?n.length:0,i=t?Math.min(r,t.length):0,o=new Array(i),u=new Array(r);for(e=0;e<i;++e)o[e]=d(t[e],n[e]);for(;e<r;++e)u[e]=n[e];return function(t){for(e=0;e<i;++e)u[e]=o[e](t);return u}}function h(t,n){var e=new Date;return t=+t,n=+n,function(r){return e.setTime(t*(1-r)+n*r),e}}var f=e(8981);function p(t,n){var e,r={},i={};for(e in null!==t&&"object"==typeof t||(t={}),null!==n&&"object"==typeof n||(n={}),n)e in t?r[e]=d(t[e],n[e]):i[e]=n[e];return function(t){for(e in r)i[e]=r[e](t);return i}}var _=e(7737),g=e(3116);function y(t,n){n||(n=[]);var e,r=t?Math.min(n.length,t.length):0,i=n.slice();return function(o){for(e=0;e<r;++e)i[e]=t[e]*(1-o)+n[e]*o;return i}}function d(t,n){var e,r,i=typeof n;return null==n||"boolean"===i?(0,g.A)(n):("number"===i?f.A:"string"===i?(e=(0,s.Ay)(n))?(n=e,l.Ay):_.A:n instanceof s.Ay?l.Ay:n instanceof Date?h:(r=n,!ArrayBuffer.isView(r)||r instanceof DataView?Array.isArray(n)?c:"function"!=typeof n.valueOf&&"function"!=typeof n.toString||isNaN(n)?p:f.A:y))(t,n)}function v(t,n){return t=+t,n=+n,function(e){return Math.round(t*(1-e)+n*e)}}var m=e(414),w=[0,1];function x(t){return t}function A(t,n){return(n-=t=+t)?function(e){return(e-t)/n}:(e=isNaN(n)?NaN:.5,function(){return e});var e}function M(t,n,e){var r=t[0],i=t[1],o=n[0],u=n[1];return i<r?(r=A(i,r),o=e(u,o)):(r=A(r,i),o=e(o,u)),function(t){return o(r(t))}}function b(t,n,e){var r=Math.min(t.length,n.length)-1,i=new Array(r),o=new Array(r),u=-1;for(t[r]<t[0]&&(t=t.slice().reverse(),n=n.slice().reverse());++u<r;)i[u]=A(t[u],t[u+1]),o[u]=e(n[u],n[u+1]);return function(n){var e=a(t,n,1,r)-1;return o[e](i[e](n))}}function T(t,n){return n.domain(t.domain()).range(t.range()).interpolate(t.interpolate()).clamp(t.clamp()).unknown(t.unknown())}function k(){return function(){var t,n,e,r,i,o,u=w,a=w,s=d,l=x;function c(){var t,n,e,s=Math.min(u.length,a.length);return l!==x&&(t=u[0],n=u[s-1],t>n&&(e=t,t=n,n=e),l=function(e){return Math.max(t,Math.min(n,e))}),r=s>2?b:M,i=o=null,h}function h(n){return null==n||isNaN(n=+n)?e:(i||(i=r(u.map(t),a,s)))(t(l(n)))}return h.invert=function(e){return l(n((o||(o=r(a,u.map(t),f.A)))(e)))},h.domain=function(t){return arguments.length?(u=Array.from(t,m.A),c()):u.slice()},h.range=function(t){return arguments.length?(a=Array.from(t),c()):a.slice()},h.rangeRound=function(t){return a=Array.from(t),s=v,c()},h.clamp=function(t){return arguments.length?(l=!!t||x,c()):l!==x},h.interpolate=function(t){return arguments.length?(s=t,c()):s},h.unknown=function(t){return arguments.length?(e=t,h):e},function(e,r){return t=e,n=r,c()}}()(x,x)}},9065:(t,n,e)=>{function r(t,n){switch(arguments.length){case 0:break;case 1:this.range(t);break;default:this.range(n).domain(t)}return this}e.d(n,{C:()=>r})},5969:(t,n,e)=>{e.d(n,{A:()=>x,C:()=>w});var r,i=e(6946),o=e(6627),u=e(9065),a=/^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;function s(t){if(!(n=a.exec(t)))throw new Error("invalid format: "+t);var n;return new l({fill:n[1],align:n[2],sign:n[3],symbol:n[4],zero:n[5],width:n[6],comma:n[7],precision:n[8]&&n[8].slice(1),trim:n[9],type:n[10]})}function l(t){this.fill=void 0===t.fill?" ":t.fill+"",this.align=void 0===t.align?">":t.align+"",this.sign=void 0===t.sign?"-":t.sign+"",this.symbol=void 0===t.symbol?"":t.symbol+"",this.zero=!!t.zero,this.width=void 0===t.width?void 0:+t.width,this.comma=!!t.comma,this.precision=void 0===t.precision?void 0:+t.precision,this.trim=!!t.trim,this.type=void 0===t.type?"":t.type+""}function c(t,n){if((e=(t=n?t.toExponential(n-1):t.toExponential()).indexOf("e"))<0)return null;var e,r=t.slice(0,e);return[r.length>1?r[0]+r.slice(2):r,+t.slice(e+1)]}function h(t){return(t=c(Math.abs(t)))?t[1]:NaN}function f(t,n){var e=c(t,n);if(!e)return t+"";var r=e[0],i=e[1];return i<0?"0."+new Array(-i).join("0")+r:r.length>i+1?r.slice(0,i+1)+"."+r.slice(i+1):r+new Array(i-r.length+2).join("0")}s.prototype=l.prototype,l.prototype.toString=function(){return this.fill+this.align+this.sign+this.symbol+(this.zero?"0":"")+(void 0===this.width?"":Math.max(1,0|this.width))+(this.comma?",":"")+(void 0===this.precision?"":"."+Math.max(0,0|this.precision))+(this.trim?"~":"")+this.type};const p={"%":(t,n)=>(100*t).toFixed(n),b:t=>Math.round(t).toString(2),c:t=>t+"",d:function(t){return Math.abs(t=Math.round(t))>=1e21?t.toLocaleString("en").replace(/,/g,""):t.toString(10)},e:(t,n)=>t.toExponential(n),f:(t,n)=>t.toFixed(n),g:(t,n)=>t.toPrecision(n),o:t=>Math.round(t).toString(8),p:(t,n)=>f(100*t,n),r:f,s:function(t,n){var e=c(t,n);if(!e)return t+"";var i=e[0],o=e[1],u=o-(r=3*Math.max(-8,Math.min(8,Math.floor(o/3))))+1,a=i.length;return u===a?i:u>a?i+new Array(u-a+1).join("0"):u>0?i.slice(0,u)+"."+i.slice(u):"0."+new Array(1-u).join("0")+c(t,Math.max(0,n+u-1))[0]},X:t=>Math.round(t).toString(16).toUpperCase(),x:t=>Math.round(t).toString(16)};function _(t){return t}var g,y,d,v=Array.prototype.map,m=["y","z","a","f","p","n","µ","m","","k","M","G","T","P","E","Z","Y"];function w(t){var n=t.domain;return t.ticks=function(t){var e=n();return(0,i.Ay)(e[0],e[e.length-1],null==t?10:t)},t.tickFormat=function(t,e){var r=n();return function(t,n,e,r){var o,u=(0,i.sG)(t,n,e);switch((r=s(null==r?",f":r)).type){case"s":var a=Math.max(Math.abs(t),Math.abs(n));return null!=r.precision||isNaN(o=function(t,n){return Math.max(0,3*Math.max(-8,Math.min(8,Math.floor(h(n)/3)))-h(Math.abs(t)))}(u,a))||(r.precision=o),d(r,a);case"":case"e":case"g":case"p":case"r":null!=r.precision||isNaN(o=function(t,n){return t=Math.abs(t),n=Math.abs(n)-t,Math.max(0,h(n)-h(t))+1}(u,Math.max(Math.abs(t),Math.abs(n))))||(r.precision=o-("e"===r.type));break;case"f":case"%":null!=r.precision||isNaN(o=function(t){return Math.max(0,-h(Math.abs(t)))}(u))||(r.precision=o-2*("%"===r.type))}return y(r)}(r[0],r[r.length-1],null==t?10:t,e)},t.nice=function(e){null==e&&(e=10);var r,o,u=n(),a=0,s=u.length-1,l=u[a],c=u[s],h=10;for(c<l&&(o=l,l=c,c=o,o=a,a=s,s=o);h-- >0;){if((o=(0,i.lq)(l,c,e))===r)return u[a]=l,u[s]=c,n(u);if(o>0)l=Math.floor(l/o)*o,c=Math.ceil(c/o)*o;else{if(!(o<0))break;l=Math.ceil(l*o)/o,c=Math.floor(c*o)/o}r=o}return t},t}function x(){var t=(0,o.Ay)();return t.copy=function(){return(0,o.C)(t,x())},u.C.apply(t,arguments),w(t)}g=function(t){var n,e,i=void 0===t.grouping||void 0===t.thousands?_:(n=v.call(t.grouping,Number),e=t.thousands+"",function(t,r){for(var i=t.length,o=[],u=0,a=n[0],s=0;i>0&&a>0&&(s+a+1>r&&(a=Math.max(1,r-s)),o.push(t.substring(i-=a,i+a)),!((s+=a+1)>r));)a=n[u=(u+1)%n.length];return o.reverse().join(e)}),o=void 0===t.currency?"":t.currency[0]+"",u=void 0===t.currency?"":t.currency[1]+"",a=void 0===t.decimal?".":t.decimal+"",l=void 0===t.numerals?_:function(t){return function(n){return n.replace(/[0-9]/g,(function(n){return t[+n]}))}}(v.call(t.numerals,String)),c=void 0===t.percent?"%":t.percent+"",f=void 0===t.minus?"−":t.minus+"",g=void 0===t.nan?"NaN":t.nan+"";function y(t){var n=(t=s(t)).fill,e=t.align,h=t.sign,_=t.symbol,y=t.zero,d=t.width,v=t.comma,w=t.precision,x=t.trim,A=t.type;"n"===A?(v=!0,A="g"):p[A]||(void 0===w&&(w=12),x=!0,A="g"),(y||"0"===n&&"="===e)&&(y=!0,n="0",e="=");var M="$"===_?o:"#"===_&&/[boxX]/.test(A)?"0"+A.toLowerCase():"",b="$"===_?u:/[%p]/.test(A)?c:"",T=p[A],k=/[defgprs%]/.test(A);function C(t){var o,u,s,c=M,p=b;if("c"===A)p=T(t)+p,t="";else{var _=(t=+t)<0||1/t<0;if(t=isNaN(t)?g:T(Math.abs(t),w),x&&(t=function(t){t:for(var n,e=t.length,r=1,i=-1;r<e;++r)switch(t[r]){case".":i=n=r;break;case"0":0===i&&(i=r),n=r;break;default:if(!+t[r])break t;i>0&&(i=0)}return i>0?t.slice(0,i)+t.slice(n+1):t}(t)),_&&0==+t&&"+"!==h&&(_=!1),c=(_?"("===h?h:f:"-"===h||"("===h?"":h)+c,p=("s"===A?m[8+r/3]:"")+p+(_&&"("===h?")":""),k)for(o=-1,u=t.length;++o<u;)if(48>(s=t.charCodeAt(o))||s>57){p=(46===s?a+t.slice(o+1):t.slice(o))+p,t=t.slice(0,o);break}}v&&!y&&(t=i(t,1/0));var C=c.length+t.length+p.length,N=C<d?new Array(d-C+1).join(n):"";switch(v&&y&&(t=i(N+t,N.length?d-p.length:1/0),N=""),e){case"<":t=c+t+p+N;break;case"=":t=c+N+t+p;break;case"^":t=N.slice(0,C=N.length>>1)+c+t+p+N.slice(C);break;default:t=N+c+t+p}return l(t)}return w=void 0===w?6:/[gprs]/.test(A)?Math.max(1,Math.min(21,w)):Math.max(0,Math.min(20,w)),C.toString=function(){return t+""},C}return{format:y,formatPrefix:function(t,n){var e=y(((t=s(t)).type="f",t)),r=3*Math.max(-8,Math.min(8,Math.floor(h(n)/3))),i=Math.pow(10,-r),o=m[8+r/3];return function(t){return e(i*t)+o}}}}({thousands:",",grouping:[3],currency:["$",""]}),y=g.format,d=g.formatPrefix},414:(t,n,e)=>{function r(t){return+t}e.d(n,{A:()=>r})},5900:(t,n,e)=>{e.d(n,{A:()=>s});var r=e(6627),i=e(9065),o=e(5969),u=e(414);function a(t){return Math.sign(t)*t*t}function s(){var t,n=(0,r.Ay)(),e=[0,1],l=!1;function c(e){var r=function(t){return Math.sign(t)*Math.sqrt(Math.abs(t))}(n(e));return isNaN(r)?t:l?Math.round(r):r}return c.invert=function(t){return n.invert(a(t))},c.domain=function(t){return arguments.length?(n.domain(t),c):n.domain()},c.range=function(t){return arguments.length?(n.range((e=Array.from(t,u.A)).map(a)),c):e.slice()},c.rangeRound=function(t){return c.range(t).round(!0)},c.round=function(t){return arguments.length?(l=!!t,c):l},c.clamp=function(t){return arguments.length?(n.clamp(t),c):n.clamp()},c.unknown=function(n){return arguments.length?(t=n,c):t},c.copy=function(){return s(n.domain(),e).round(l).clamp(n.clamp()).unknown(t)},i.C.apply(c,arguments),(0,o.C)(c)}},6325:(t,n,e)=>{e.d(n,{A:()=>An});var r=e(321),i=e(6946);const o=1e3,u=6e4,a=36e5,s=864e5,l=6048e5,c=31536e6,h=new Date,f=new Date;function p(t,n,e,r){function i(n){return t(n=0===arguments.length?new Date:new Date(+n)),n}return i.floor=n=>(t(n=new Date(+n)),n),i.ceil=e=>(t(e=new Date(e-1)),n(e,1),t(e),e),i.round=t=>{const n=i(t),e=i.ceil(t);return t-n<e-t?n:e},i.offset=(t,e)=>(n(t=new Date(+t),null==e?1:Math.floor(e)),t),i.range=(e,r,o)=>{const u=[];if(e=i.ceil(e),o=null==o?1:Math.floor(o),!(e<r&&o>0))return u;let a;do{u.push(a=new Date(+e)),n(e,o),t(e)}while(a<e&&e<r);return u},i.filter=e=>p((n=>{if(n>=n)for(;t(n),!e(n);)n.setTime(n-1)}),((t,r)=>{if(t>=t)if(r<0)for(;++r<=0;)for(;n(t,-1),!e(t););else for(;--r>=0;)for(;n(t,1),!e(t););})),e&&(i.count=(n,r)=>(h.setTime(+n),f.setTime(+r),t(h),t(f),Math.floor(e(h,f))),i.every=t=>(t=Math.floor(t),isFinite(t)&&t>0?t>1?i.filter(r?n=>r(n)%t==0:n=>i.count(0,n)%t==0):i:null)),i}const _=p((()=>{}),((t,n)=>{t.setTime(+t+n)}),((t,n)=>n-t));_.every=t=>(t=Math.floor(t),isFinite(t)&&t>0?t>1?p((n=>{n.setTime(Math.floor(n/t)*t)}),((n,e)=>{n.setTime(+n+e*t)}),((n,e)=>(e-n)/t)):_:null),_.range;const g=p((t=>{t.setTime(t-t.getMilliseconds())}),((t,n)=>{t.setTime(+t+n*o)}),((t,n)=>(n-t)/o),(t=>t.getUTCSeconds())),y=(g.range,p((t=>{t.setTime(t-t.getMilliseconds()-t.getSeconds()*o)}),((t,n)=>{t.setTime(+t+n*u)}),((t,n)=>(n-t)/u),(t=>t.getMinutes()))),d=(y.range,p((t=>{t.setUTCSeconds(0,0)}),((t,n)=>{t.setTime(+t+n*u)}),((t,n)=>(n-t)/u),(t=>t.getUTCMinutes()))),v=(d.range,p((t=>{t.setTime(t-t.getMilliseconds()-t.getSeconds()*o-t.getMinutes()*u)}),((t,n)=>{t.setTime(+t+n*a)}),((t,n)=>(n-t)/a),(t=>t.getHours()))),m=(v.range,p((t=>{t.setUTCMinutes(0,0,0)}),((t,n)=>{t.setTime(+t+n*a)}),((t,n)=>(n-t)/a),(t=>t.getUTCHours()))),w=(m.range,p((t=>t.setHours(0,0,0,0)),((t,n)=>t.setDate(t.getDate()+n)),((t,n)=>(n-t-(n.getTimezoneOffset()-t.getTimezoneOffset())*u)/s),(t=>t.getDate()-1))),x=(w.range,p((t=>{t.setUTCHours(0,0,0,0)}),((t,n)=>{t.setUTCDate(t.getUTCDate()+n)}),((t,n)=>(n-t)/s),(t=>t.getUTCDate()-1))),A=(x.range,p((t=>{t.setUTCHours(0,0,0,0)}),((t,n)=>{t.setUTCDate(t.getUTCDate()+n)}),((t,n)=>(n-t)/s),(t=>Math.floor(t/s))));function M(t){return p((n=>{n.setDate(n.getDate()-(n.getDay()+7-t)%7),n.setHours(0,0,0,0)}),((t,n)=>{t.setDate(t.getDate()+7*n)}),((t,n)=>(n-t-(n.getTimezoneOffset()-t.getTimezoneOffset())*u)/l))}A.range;const b=M(0),T=M(1),k=M(2),C=M(3),N=M(4),$=M(5),S=M(6);function D(t){return p((n=>{n.setUTCDate(n.getUTCDate()-(n.getUTCDay()+7-t)%7),n.setUTCHours(0,0,0,0)}),((t,n)=>{t.setUTCDate(t.getUTCDate()+7*n)}),((t,n)=>(n-t)/l))}b.range,T.range,k.range,C.range,N.range,$.range,S.range;const U=D(0),E=D(1),Y=D(2),F=D(3),H=D(4),P=D(5),L=D(6),j=(U.range,E.range,Y.range,F.range,H.range,P.range,L.range,p((t=>{t.setDate(1),t.setHours(0,0,0,0)}),((t,n)=>{t.setMonth(t.getMonth()+n)}),((t,n)=>n.getMonth()-t.getMonth()+12*(n.getFullYear()-t.getFullYear())),(t=>t.getMonth()))),q=(j.range,p((t=>{t.setUTCDate(1),t.setUTCHours(0,0,0,0)}),((t,n)=>{t.setUTCMonth(t.getUTCMonth()+n)}),((t,n)=>n.getUTCMonth()-t.getUTCMonth()+12*(n.getUTCFullYear()-t.getUTCFullYear())),(t=>t.getUTCMonth()))),X=(q.range,p((t=>{t.setMonth(0,1),t.setHours(0,0,0,0)}),((t,n)=>{t.setFullYear(t.getFullYear()+n)}),((t,n)=>n.getFullYear()-t.getFullYear()),(t=>t.getFullYear())));X.every=t=>isFinite(t=Math.floor(t))&&t>0?p((n=>{n.setFullYear(Math.floor(n.getFullYear()/t)*t),n.setMonth(0,1),n.setHours(0,0,0,0)}),((n,e)=>{n.setFullYear(n.getFullYear()+e*t)})):null,X.range;const z=p((t=>{t.setUTCMonth(0,1),t.setUTCHours(0,0,0,0)}),((t,n)=>{t.setUTCFullYear(t.getUTCFullYear()+n)}),((t,n)=>n.getUTCFullYear()-t.getUTCFullYear()),(t=>t.getUTCFullYear()));function O(t,n,e,h,f,p){const y=[[g,1,o],[g,5,5e3],[g,15,15e3],[g,30,3e4],[p,1,u],[p,5,3e5],[p,15,9e5],[p,30,18e5],[f,1,a],[f,3,108e5],[f,6,216e5],[f,12,432e5],[h,1,s],[h,2,1728e5],[e,1,l],[n,1,2592e6],[n,3,7776e6],[t,1,c]];function d(n,e,o){const u=Math.abs(e-n)/o,a=(0,r.A)((([,,t])=>t)).right(y,u);if(a===y.length)return t.every((0,i.sG)(n/c,e/c,o));if(0===a)return _.every(Math.max((0,i.sG)(n,e,o),1));const[s,l]=y[u/y[a-1][2]<y[a][2]/u?a-1:a];return s.every(l)}return[function(t,n,e){const r=n<t;r&&([t,n]=[n,t]);const i=e&&"function"==typeof e.range?e:d(t,n,e),o=i?i.range(t,+n+1):[];return r?o.reverse():o},d]}z.every=t=>isFinite(t=Math.floor(t))&&t>0?p((n=>{n.setUTCFullYear(Math.floor(n.getUTCFullYear()/t)*t),n.setUTCMonth(0,1),n.setUTCHours(0,0,0,0)}),((n,e)=>{n.setUTCFullYear(n.getUTCFullYear()+e*t)})):null,z.range;const[R,V]=O(z,q,U,A,m,d),[I,Z]=O(X,j,b,w,v,y);function B(t){if(0<=t.y&&t.y<100){var n=new Date(-1,t.m,t.d,t.H,t.M,t.S,t.L);return n.setFullYear(t.y),n}return new Date(t.y,t.m,t.d,t.H,t.M,t.S,t.L)}function Q(t){if(0<=t.y&&t.y<100){var n=new Date(Date.UTC(-1,t.m,t.d,t.H,t.M,t.S,t.L));return n.setUTCFullYear(t.y),n}return new Date(Date.UTC(t.y,t.m,t.d,t.H,t.M,t.S,t.L))}function W(t,n,e){return{y:t,m:n,d:e,H:0,M:0,S:0,L:0}}var G,J,K={"-":"",_:" ",0:"0"},tt=/^\s*\d+/,nt=/^%/,et=/[\\^$*+?|[\]().{}]/g;function rt(t,n,e){var r=t<0?"-":"",i=(r?-t:t)+"",o=i.length;return r+(o<e?new Array(e-o+1).join(n)+i:i)}function it(t){return t.replace(et,"\\$&")}function ot(t){return new RegExp("^(?:"+t.map(it).join("|")+")","i")}function ut(t){return new Map(t.map(((t,n)=>[t.toLowerCase(),n])))}function at(t,n,e){var r=tt.exec(n.slice(e,e+1));return r?(t.w=+r[0],e+r[0].length):-1}function st(t,n,e){var r=tt.exec(n.slice(e,e+1));return r?(t.u=+r[0],e+r[0].length):-1}function lt(t,n,e){var r=tt.exec(n.slice(e,e+2));return r?(t.U=+r[0],e+r[0].length):-1}function ct(t,n,e){var r=tt.exec(n.slice(e,e+2));return r?(t.V=+r[0],e+r[0].length):-1}function ht(t,n,e){var r=tt.exec(n.slice(e,e+2));return r?(t.W=+r[0],e+r[0].length):-1}function ft(t,n,e){var r=tt.exec(n.slice(e,e+4));return r?(t.y=+r[0],e+r[0].length):-1}function pt(t,n,e){var r=tt.exec(n.slice(e,e+2));return r?(t.y=+r[0]+(+r[0]>68?1900:2e3),e+r[0].length):-1}function _t(t,n,e){var r=/^(Z)|([+-]\d\d)(?::?(\d\d))?/.exec(n.slice(e,e+6));return r?(t.Z=r[1]?0:-(r[2]+(r[3]||"00")),e+r[0].length):-1}function gt(t,n,e){var r=tt.exec(n.slice(e,e+1));return r?(t.q=3*r[0]-3,e+r[0].length):-1}function yt(t,n,e){var r=tt.exec(n.slice(e,e+2));return r?(t.m=r[0]-1,e+r[0].length):-1}function dt(t,n,e){var r=tt.exec(n.slice(e,e+2));return r?(t.d=+r[0],e+r[0].length):-1}function vt(t,n,e){var r=tt.exec(n.slice(e,e+3));return r?(t.m=0,t.d=+r[0],e+r[0].length):-1}function mt(t,n,e){var r=tt.exec(n.slice(e,e+2));return r?(t.H=+r[0],e+r[0].length):-1}function wt(t,n,e){var r=tt.exec(n.slice(e,e+2));return r?(t.M=+r[0],e+r[0].length):-1}function xt(t,n,e){var r=tt.exec(n.slice(e,e+2));return r?(t.S=+r[0],e+r[0].length):-1}function At(t,n,e){var r=tt.exec(n.slice(e,e+3));return r?(t.L=+r[0],e+r[0].length):-1}function Mt(t,n,e){var r=tt.exec(n.slice(e,e+6));return r?(t.L=Math.floor(r[0]/1e3),e+r[0].length):-1}function bt(t,n,e){var r=nt.exec(n.slice(e,e+1));return r?e+r[0].length:-1}function Tt(t,n,e){var r=tt.exec(n.slice(e));return r?(t.Q=+r[0],e+r[0].length):-1}function kt(t,n,e){var r=tt.exec(n.slice(e));return r?(t.s=+r[0],e+r[0].length):-1}function Ct(t,n){return rt(t.getDate(),n,2)}function Nt(t,n){return rt(t.getHours(),n,2)}function $t(t,n){return rt(t.getHours()%12||12,n,2)}function St(t,n){return rt(1+w.count(X(t),t),n,3)}function Dt(t,n){return rt(t.getMilliseconds(),n,3)}function Ut(t,n){return Dt(t,n)+"000"}function Et(t,n){return rt(t.getMonth()+1,n,2)}function Yt(t,n){return rt(t.getMinutes(),n,2)}function Ft(t,n){return rt(t.getSeconds(),n,2)}function Ht(t){var n=t.getDay();return 0===n?7:n}function Pt(t,n){return rt(b.count(X(t)-1,t),n,2)}function Lt(t){var n=t.getDay();return n>=4||0===n?N(t):N.ceil(t)}function jt(t,n){return t=Lt(t),rt(N.count(X(t),t)+(4===X(t).getDay()),n,2)}function qt(t){return t.getDay()}function Xt(t,n){return rt(T.count(X(t)-1,t),n,2)}function zt(t,n){return rt(t.getFullYear()%100,n,2)}function Ot(t,n){return rt((t=Lt(t)).getFullYear()%100,n,2)}function Rt(t,n){return rt(t.getFullYear()%1e4,n,4)}function Vt(t,n){var e=t.getDay();return rt((t=e>=4||0===e?N(t):N.ceil(t)).getFullYear()%1e4,n,4)}function It(t){var n=t.getTimezoneOffset();return(n>0?"-":(n*=-1,"+"))+rt(n/60|0,"0",2)+rt(n%60,"0",2)}function Zt(t,n){return rt(t.getUTCDate(),n,2)}function Bt(t,n){return rt(t.getUTCHours(),n,2)}function Qt(t,n){return rt(t.getUTCHours()%12||12,n,2)}function Wt(t,n){return rt(1+x.count(z(t),t),n,3)}function Gt(t,n){return rt(t.getUTCMilliseconds(),n,3)}function Jt(t,n){return Gt(t,n)+"000"}function Kt(t,n){return rt(t.getUTCMonth()+1,n,2)}function tn(t,n){return rt(t.getUTCMinutes(),n,2)}function nn(t,n){return rt(t.getUTCSeconds(),n,2)}function en(t){var n=t.getUTCDay();return 0===n?7:n}function rn(t,n){return rt(U.count(z(t)-1,t),n,2)}function on(t){var n=t.getUTCDay();return n>=4||0===n?H(t):H.ceil(t)}function un(t,n){return t=on(t),rt(H.count(z(t),t)+(4===z(t).getUTCDay()),n,2)}function an(t){return t.getUTCDay()}function sn(t,n){return rt(E.count(z(t)-1,t),n,2)}function ln(t,n){return rt(t.getUTCFullYear()%100,n,2)}function cn(t,n){return rt((t=on(t)).getUTCFullYear()%100,n,2)}function hn(t,n){return rt(t.getUTCFullYear()%1e4,n,4)}function fn(t,n){var e=t.getUTCDay();return rt((t=e>=4||0===e?H(t):H.ceil(t)).getUTCFullYear()%1e4,n,4)}function pn(){return"+0000"}function _n(){return"%"}function gn(t){return+t}function yn(t){return Math.floor(+t/1e3)}G=function(t){var n=t.dateTime,e=t.date,r=t.time,i=t.periods,o=t.days,u=t.shortDays,a=t.months,s=t.shortMonths,l=ot(i),c=ut(i),h=ot(o),f=ut(o),p=ot(u),_=ut(u),g=ot(a),y=ut(a),d=ot(s),v=ut(s),m={a:function(t){return u[t.getDay()]},A:function(t){return o[t.getDay()]},b:function(t){return s[t.getMonth()]},B:function(t){return a[t.getMonth()]},c:null,d:Ct,e:Ct,f:Ut,g:Ot,G:Vt,H:Nt,I:$t,j:St,L:Dt,m:Et,M:Yt,p:function(t){return i[+(t.getHours()>=12)]},q:function(t){return 1+~~(t.getMonth()/3)},Q:gn,s:yn,S:Ft,u:Ht,U:Pt,V:jt,w:qt,W:Xt,x:null,X:null,y:zt,Y:Rt,Z:It,"%":_n},A={a:function(t){return u[t.getUTCDay()]},A:function(t){return o[t.getUTCDay()]},b:function(t){return s[t.getUTCMonth()]},B:function(t){return a[t.getUTCMonth()]},c:null,d:Zt,e:Zt,f:Jt,g:cn,G:fn,H:Bt,I:Qt,j:Wt,L:Gt,m:Kt,M:tn,p:function(t){return i[+(t.getUTCHours()>=12)]},q:function(t){return 1+~~(t.getUTCMonth()/3)},Q:gn,s:yn,S:nn,u:en,U:rn,V:un,w:an,W:sn,x:null,X:null,y:ln,Y:hn,Z:pn,"%":_n},M={a:function(t,n,e){var r=p.exec(n.slice(e));return r?(t.w=_.get(r[0].toLowerCase()),e+r[0].length):-1},A:function(t,n,e){var r=h.exec(n.slice(e));return r?(t.w=f.get(r[0].toLowerCase()),e+r[0].length):-1},b:function(t,n,e){var r=d.exec(n.slice(e));return r?(t.m=v.get(r[0].toLowerCase()),e+r[0].length):-1},B:function(t,n,e){var r=g.exec(n.slice(e));return r?(t.m=y.get(r[0].toLowerCase()),e+r[0].length):-1},c:function(t,e,r){return C(t,n,e,r)},d:dt,e:dt,f:Mt,g:pt,G:ft,H:mt,I:mt,j:vt,L:At,m:yt,M:wt,p:function(t,n,e){var r=l.exec(n.slice(e));return r?(t.p=c.get(r[0].toLowerCase()),e+r[0].length):-1},q:gt,Q:Tt,s:kt,S:xt,u:st,U:lt,V:ct,w:at,W:ht,x:function(t,n,r){return C(t,e,n,r)},X:function(t,n,e){return C(t,r,n,e)},y:pt,Y:ft,Z:_t,"%":bt};function b(t,n){return function(e){var r,i,o,u=[],a=-1,s=0,l=t.length;for(e instanceof Date||(e=new Date(+e));++a<l;)37===t.charCodeAt(a)&&(u.push(t.slice(s,a)),null!=(i=K[r=t.charAt(++a)])?r=t.charAt(++a):i="e"===r?" ":"0",(o=n[r])&&(r=o(e,i)),u.push(r),s=a+1);return u.push(t.slice(s,a)),u.join("")}}function k(t,n){return function(e){var r,i,o=W(1900,void 0,1);if(C(o,t,e+="",0)!=e.length)return null;if("Q"in o)return new Date(o.Q);if("s"in o)return new Date(1e3*o.s+("L"in o?o.L:0));if(n&&!("Z"in o)&&(o.Z=0),"p"in o&&(o.H=o.H%12+12*o.p),void 0===o.m&&(o.m="q"in o?o.q:0),"V"in o){if(o.V<1||o.V>53)return null;"w"in o||(o.w=1),"Z"in o?(i=(r=Q(W(o.y,0,1))).getUTCDay(),r=i>4||0===i?E.ceil(r):E(r),r=x.offset(r,7*(o.V-1)),o.y=r.getUTCFullYear(),o.m=r.getUTCMonth(),o.d=r.getUTCDate()+(o.w+6)%7):(i=(r=B(W(o.y,0,1))).getDay(),r=i>4||0===i?T.ceil(r):T(r),r=w.offset(r,7*(o.V-1)),o.y=r.getFullYear(),o.m=r.getMonth(),o.d=r.getDate()+(o.w+6)%7)}else("W"in o||"U"in o)&&("w"in o||(o.w="u"in o?o.u%7:"W"in o?1:0),i="Z"in o?Q(W(o.y,0,1)).getUTCDay():B(W(o.y,0,1)).getDay(),o.m=0,o.d="W"in o?(o.w+6)%7+7*o.W-(i+5)%7:o.w+7*o.U-(i+6)%7);return"Z"in o?(o.H+=o.Z/100|0,o.M+=o.Z%100,Q(o)):B(o)}}function C(t,n,e,r){for(var i,o,u=0,a=n.length,s=e.length;u<a;){if(r>=s)return-1;if(37===(i=n.charCodeAt(u++))){if(i=n.charAt(u++),!(o=M[i in K?n.charAt(u++):i])||(r=o(t,e,r))<0)return-1}else if(i!=e.charCodeAt(r++))return-1}return r}return m.x=b(e,m),m.X=b(r,m),m.c=b(n,m),A.x=b(e,A),A.X=b(r,A),A.c=b(n,A),{format:function(t){var n=b(t+="",m);return n.toString=function(){return t},n},parse:function(t){var n=k(t+="",!1);return n.toString=function(){return t},n},utcFormat:function(t){var n=b(t+="",A);return n.toString=function(){return t},n},utcParse:function(t){var n=k(t+="",!0);return n.toString=function(){return t},n}}}({dateTime:"%x, %X",date:"%-m/%-d/%Y",time:"%-I:%M:%S %p",periods:["AM","PM"],days:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],shortDays:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],months:["January","February","March","April","May","June","July","August","September","October","November","December"],shortMonths:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]}),G.format,G.parse,J=G.utcFormat,G.utcParse;var dn=e(6627);function vn(t){return new Date(t)}function mn(t){return t instanceof Date?+t:+new Date(+t)}function wn(t,n,e,r,i,o,u,a,s,l){var c=(0,dn.Ay)(),h=c.invert,f=c.domain,p=l(".%L"),_=l(":%S"),g=l("%I:%M"),y=l("%I %p"),d=l("%a %d"),v=l("%b %d"),m=l("%B"),w=l("%Y");function x(t){return(s(t)<t?p:a(t)<t?_:u(t)<t?g:o(t)<t?y:r(t)<t?i(t)<t?d:v:e(t)<t?m:w)(t)}return c.invert=function(t){return new Date(h(t))},c.domain=function(t){return arguments.length?f(Array.from(t,mn)):f().map(vn)},c.ticks=function(n){var e=f();return t(e[0],e[e.length-1],null==n?10:n)},c.tickFormat=function(t,n){return null==n?x:l(n)},c.nice=function(t){var e=f();return t&&"function"==typeof t.range||(t=n(e[0],e[e.length-1],null==t?10:t)),t?f(function(t,n){var e,r=0,i=(t=t.slice()).length-1,o=t[r],u=t[i];return u<o&&(e=r,r=i,i=e,e=o,o=u,u=e),t[r]=n.floor(o),t[i]=n.ceil(u),t}(e,t)):c},c.copy=function(){return(0,dn.C)(c,wn(t,n,e,r,i,o,u,a,s,l))},c}var xn=e(9065);function An(){return xn.C.apply(wn(R,V,z,q,U,x,m,d,g,J).domain([Date.UTC(2e3,0,1),Date.UTC(2e3,0,2)]),arguments)}},1521:(t,n,e)=>{e.d(n,{A:()=>o});var r=e(3663),i=e(6108);function o(t){return"string"==typeof(n=(0,r.A)(t).call(document.documentElement))?new i.LN([[document.querySelector(n)]],[document.documentElement]):new i.LN([[n]],i.zr);var n}},3663:(t,n,e)=>{e.d(n,{A:()=>a});var r=e(7268),i=e(7947);function o(t){return function(){var n=this.ownerDocument,e=this.namespaceURI;return e===i.g&&n.documentElement.namespaceURI===i.g?n.createElement(t):n.createElementNS(e,t)}}function u(t){return function(){return this.ownerDocument.createElementNS(t.space,t.local)}}function a(t){var n=(0,r.A)(t);return(n.local?u:o)(n)}},6541:(t,n,e)=>{function r(t){return function(){return this.matches(t)}}function i(t){return function(n){return n.matches(t)}}e.d(n,{A:()=>r,j:()=>i})},7268:(t,n,e)=>{e.d(n,{A:()=>i});var r=e(7947);function i(t){var n=t+="",e=n.indexOf(":");return e>=0&&"xmlns"!==(n=t.slice(0,e))&&(t=t.slice(e+1)),r.A.hasOwnProperty(n)?{space:r.A[n],local:t}:t}},7947:(t,n,e)=>{e.d(n,{A:()=>i,g:()=>r});var r="http://www.w3.org/1999/xhtml";const i={svg:"http://www.w3.org/2000/svg",xhtml:r,xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"}},6108:(t,n,e)=>{e.d(n,{LN:()=>et,Ay:()=>it,zr:()=>nt});var r=e(574),i=e(747);var o=e(6541),u=Array.prototype.find;function a(){return this.firstElementChild}var s=Array.prototype.filter;function l(){return Array.from(this.children)}function c(t){return new Array(t.length)}function h(t,n){this.ownerDocument=t.ownerDocument,this.namespaceURI=t.namespaceURI,this._next=null,this._parent=t,this.__data__=n}function f(t,n,e,r,i,o){for(var u,a=0,s=n.length,l=o.length;a<l;++a)(u=n[a])?(u.__data__=o[a],r[a]=u):e[a]=new h(t,o[a]);for(;a<s;++a)(u=n[a])&&(i[a]=u)}function p(t,n,e,r,i,o,u){var a,s,l,c=new Map,f=n.length,p=o.length,_=new Array(f);for(a=0;a<f;++a)(s=n[a])&&(_[a]=l=u.call(s,s.__data__,a,n)+"",c.has(l)?i[a]=s:c.set(l,s));for(a=0;a<p;++a)l=u.call(t,o[a],a,o)+"",(s=c.get(l))?(r[a]=s,s.__data__=o[a],c.delete(l)):e[a]=new h(t,o[a]);for(a=0;a<f;++a)(s=n[a])&&c.get(_[a])===s&&(i[a]=s)}function _(t){return t.__data__}function g(t){return"object"==typeof t&&"length"in t?t:Array.from(t)}function y(t,n){return t<n?-1:t>n?1:t>=n?0:NaN}h.prototype={constructor:h,appendChild:function(t){return this._parent.insertBefore(t,this._next)},insertBefore:function(t,n){return this._parent.insertBefore(t,n)},querySelector:function(t){return this._parent.querySelector(t)},querySelectorAll:function(t){return this._parent.querySelectorAll(t)}};var d=e(7268);function v(t){return function(){this.removeAttribute(t)}}function m(t){return function(){this.removeAttributeNS(t.space,t.local)}}function w(t,n){return function(){this.setAttribute(t,n)}}function x(t,n){return function(){this.setAttributeNS(t.space,t.local,n)}}function A(t,n){return function(){var e=n.apply(this,arguments);null==e?this.removeAttribute(t):this.setAttribute(t,e)}}function M(t,n){return function(){var e=n.apply(this,arguments);null==e?this.removeAttributeNS(t.space,t.local):this.setAttributeNS(t.space,t.local,e)}}var b=e(3683);function T(t){return function(){delete this[t]}}function k(t,n){return function(){this[t]=n}}function C(t,n){return function(){var e=n.apply(this,arguments);null==e?delete this[t]:this[t]=e}}function N(t){return t.trim().split(/^|\s+/)}function $(t){return t.classList||new S(t)}function S(t){this._node=t,this._names=N(t.getAttribute("class")||"")}function D(t,n){for(var e=$(t),r=-1,i=n.length;++r<i;)e.add(n[r])}function U(t,n){for(var e=$(t),r=-1,i=n.length;++r<i;)e.remove(n[r])}function E(t){return function(){D(this,t)}}function Y(t){return function(){U(this,t)}}function F(t,n){return function(){(n.apply(this,arguments)?D:U)(this,t)}}function H(){this.textContent=""}function P(t){return function(){this.textContent=t}}function L(t){return function(){var n=t.apply(this,arguments);this.textContent=null==n?"":n}}function j(){this.innerHTML=""}function q(t){return function(){this.innerHTML=t}}function X(t){return function(){var n=t.apply(this,arguments);this.innerHTML=null==n?"":n}}function z(){this.nextSibling&&this.parentNode.appendChild(this)}function O(){this.previousSibling&&this.parentNode.insertBefore(this,this.parentNode.firstChild)}S.prototype={add:function(t){this._names.indexOf(t)<0&&(this._names.push(t),this._node.setAttribute("class",this._names.join(" ")))},remove:function(t){var n=this._names.indexOf(t);n>=0&&(this._names.splice(n,1),this._node.setAttribute("class",this._names.join(" ")))},contains:function(t){return this._names.indexOf(t)>=0}};var R=e(3663);function V(){return null}function I(){var t=this.parentNode;t&&t.removeChild(this)}function Z(){var t=this.cloneNode(!1),n=this.parentNode;return n?n.insertBefore(t,this.nextSibling):t}function B(){var t=this.cloneNode(!0),n=this.parentNode;return n?n.insertBefore(t,this.nextSibling):t}function Q(t){return function(){var n=this.__on;if(n){for(var e,r=0,i=-1,o=n.length;r<o;++r)e=n[r],t.type&&e.type!==t.type||e.name!==t.name?n[++i]=e:this.removeEventListener(e.type,e.listener,e.options);++i?n.length=i:delete this.__on}}}function W(t,n,e){return function(){var r,i=this.__on,o=function(t){return function(n){t.call(this,n,this.__data__)}}(n);if(i)for(var u=0,a=i.length;u<a;++u)if((r=i[u]).type===t.type&&r.name===t.name)return this.removeEventListener(r.type,r.listener,r.options),this.addEventListener(r.type,r.listener=o,r.options=e),void(r.value=n);this.addEventListener(t.type,o,e),r={type:t.type,name:t.name,value:n,listener:o,options:e},i?i.push(r):this.__on=[r]}}var G=e(6747);function J(t,n,e){var r=(0,G.A)(t),i=r.CustomEvent;"function"==typeof i?i=new i(n,e):(i=r.document.createEvent("Event"),e?(i.initEvent(n,e.bubbles,e.cancelable),i.detail=e.detail):i.initEvent(n,!1,!1)),t.dispatchEvent(i)}function K(t,n){return function(){return J(this,t,n)}}function tt(t,n){return function(){return J(this,t,n.apply(this,arguments))}}var nt=[null];function et(t,n){this._groups=t,this._parents=n}function rt(){return new et([[document.documentElement]],nt)}et.prototype=rt.prototype={constructor:et,select:function(t){"function"!=typeof t&&(t=(0,r.A)(t));for(var n=this._groups,e=n.length,i=new Array(e),o=0;o<e;++o)for(var u,a,s=n[o],l=s.length,c=i[o]=new Array(l),h=0;h<l;++h)(u=s[h])&&(a=t.call(u,u.__data__,h,s))&&("__data__"in u&&(a.__data__=u.__data__),c[h]=a);return new et(i,this._parents)},selectAll:function(t){t="function"==typeof t?function(t){return function(){return null==(n=t.apply(this,arguments))?[]:Array.isArray(n)?n:Array.from(n);var n}}(t):(0,i.A)(t);for(var n=this._groups,e=n.length,r=[],o=[],u=0;u<e;++u)for(var a,s=n[u],l=s.length,c=0;c<l;++c)(a=s[c])&&(r.push(t.call(a,a.__data__,c,s)),o.push(a));return new et(r,o)},selectChild:function(t){return this.select(null==t?a:function(t){return function(){return u.call(this.children,t)}}("function"==typeof t?t:(0,o.j)(t)))},selectChildren:function(t){return this.selectAll(null==t?l:function(t){return function(){return s.call(this.children,t)}}("function"==typeof t?t:(0,o.j)(t)))},filter:function(t){"function"!=typeof t&&(t=(0,o.A)(t));for(var n=this._groups,e=n.length,r=new Array(e),i=0;i<e;++i)for(var u,a=n[i],s=a.length,l=r[i]=[],c=0;c<s;++c)(u=a[c])&&t.call(u,u.__data__,c,a)&&l.push(u);return new et(r,this._parents)},data:function(t,n){if(!arguments.length)return Array.from(this,_);var e,r=n?p:f,i=this._parents,o=this._groups;"function"!=typeof t&&(e=t,t=function(){return e});for(var u=o.length,a=new Array(u),s=new Array(u),l=new Array(u),c=0;c<u;++c){var h=i[c],y=o[c],d=y.length,v=g(t.call(h,h&&h.__data__,c,i)),m=v.length,w=s[c]=new Array(m),x=a[c]=new Array(m);r(h,y,w,x,l[c]=new Array(d),v,n);for(var A,M,b=0,T=0;b<m;++b)if(A=w[b]){for(b>=T&&(T=b+1);!(M=x[T])&&++T<m;);A._next=M||null}}return(a=new et(a,i))._enter=s,a._exit=l,a},enter:function(){return new et(this._enter||this._groups.map(c),this._parents)},exit:function(){return new et(this._exit||this._groups.map(c),this._parents)},join:function(t,n,e){var r=this.enter(),i=this,o=this.exit();return"function"==typeof t?(r=t(r))&&(r=r.selection()):r=r.append(t+""),null!=n&&(i=n(i))&&(i=i.selection()),null==e?o.remove():e(o),r&&i?r.merge(i).order():i},merge:function(t){for(var n=t.selection?t.selection():t,e=this._groups,r=n._groups,i=e.length,o=r.length,u=Math.min(i,o),a=new Array(i),s=0;s<u;++s)for(var l,c=e[s],h=r[s],f=c.length,p=a[s]=new Array(f),_=0;_<f;++_)(l=c[_]||h[_])&&(p[_]=l);for(;s<i;++s)a[s]=e[s];return new et(a,this._parents)},selection:function(){return this},order:function(){for(var t=this._groups,n=-1,e=t.length;++n<e;)for(var r,i=t[n],o=i.length-1,u=i[o];--o>=0;)(r=i[o])&&(u&&4^r.compareDocumentPosition(u)&&u.parentNode.insertBefore(r,u),u=r);return this},sort:function(t){function n(n,e){return n&&e?t(n.__data__,e.__data__):!n-!e}t||(t=y);for(var e=this._groups,r=e.length,i=new Array(r),o=0;o<r;++o){for(var u,a=e[o],s=a.length,l=i[o]=new Array(s),c=0;c<s;++c)(u=a[c])&&(l[c]=u);l.sort(n)}return new et(i,this._parents).order()},call:function(){var t=arguments[0];return arguments[0]=this,t.apply(null,arguments),this},nodes:function(){return Array.from(this)},node:function(){for(var t=this._groups,n=0,e=t.length;n<e;++n)for(var r=t[n],i=0,o=r.length;i<o;++i){var u=r[i];if(u)return u}return null},size:function(){let t=0;for(const n of this)++t;return t},empty:function(){return!this.node()},each:function(t){for(var n=this._groups,e=0,r=n.length;e<r;++e)for(var i,o=n[e],u=0,a=o.length;u<a;++u)(i=o[u])&&t.call(i,i.__data__,u,o);return this},attr:function(t,n){var e=(0,d.A)(t);if(arguments.length<2){var r=this.node();return e.local?r.getAttributeNS(e.space,e.local):r.getAttribute(e)}return this.each((null==n?e.local?m:v:"function"==typeof n?e.local?M:A:e.local?x:w)(e,n))},style:b.A,property:function(t,n){return arguments.length>1?this.each((null==n?T:"function"==typeof n?C:k)(t,n)):this.node()[t]},classed:function(t,n){var e=N(t+"");if(arguments.length<2){for(var r=$(this.node()),i=-1,o=e.length;++i<o;)if(!r.contains(e[i]))return!1;return!0}return this.each(("function"==typeof n?F:n?E:Y)(e,n))},text:function(t){return arguments.length?this.each(null==t?H:("function"==typeof t?L:P)(t)):this.node().textContent},html:function(t){return arguments.length?this.each(null==t?j:("function"==typeof t?X:q)(t)):this.node().innerHTML},raise:function(){return this.each(z)},lower:function(){return this.each(O)},append:function(t){var n="function"==typeof t?t:(0,R.A)(t);return this.select((function(){return this.appendChild(n.apply(this,arguments))}))},insert:function(t,n){var e="function"==typeof t?t:(0,R.A)(t),i=null==n?V:"function"==typeof n?n:(0,r.A)(n);return this.select((function(){return this.insertBefore(e.apply(this,arguments),i.apply(this,arguments)||null)}))},remove:function(){return this.each(I)},clone:function(t){return this.select(t?B:Z)},datum:function(t){return arguments.length?this.property("__data__",t):this.node().__data__},on:function(t,n,e){var r,i,o=function(t){return t.trim().split(/^|\s+/).map((function(t){var n="",e=t.indexOf(".");return e>=0&&(n=t.slice(e+1),t=t.slice(0,e)),{type:t,name:n}}))}(t+""),u=o.length;if(!(arguments.length<2)){for(a=n?W:Q,r=0;r<u;++r)this.each(a(o[r],n,e));return this}var a=this.node().__on;if(a)for(var s,l=0,c=a.length;l<c;++l)for(r=0,s=a[l];r<u;++r)if((i=o[r]).type===s.type&&i.name===s.name)return s.value},dispatch:function(t,n){return this.each(("function"==typeof n?tt:K)(t,n))},[Symbol.iterator]:function*(){for(var t=this._groups,n=0,e=t.length;n<e;++n)for(var r,i=t[n],o=0,u=i.length;o<u;++o)(r=i[o])&&(yield r)}};const it=rt},3683:(t,n,e)=>{e.d(n,{A:()=>a,j:()=>s});var r=e(6747);function i(t){return function(){this.style.removeProperty(t)}}function o(t,n,e){return function(){this.style.setProperty(t,n,e)}}function u(t,n,e){return function(){var r=n.apply(this,arguments);null==r?this.style.removeProperty(t):this.style.setProperty(t,r,e)}}function a(t,n,e){return arguments.length>1?this.each((null==n?i:"function"==typeof n?u:o)(t,n,null==e?"":e)):s(this.node(),t)}function s(t,n){return t.style.getPropertyValue(n)||(0,r.A)(t).getComputedStyle(t,null).getPropertyValue(n)}},574:(t,n,e)=>{function r(){}function i(t){return null==t?r:function(){return this.querySelector(t)}}e.d(n,{A:()=>i})},747:(t,n,e)=>{function r(){return[]}function i(t){return null==t?r:function(){return this.querySelectorAll(t)}}e.d(n,{A:()=>i})},6747:(t,n,e)=>{function r(t){return t.ownerDocument&&t.ownerDocument.defaultView||t.document&&t||t.defaultView}e.d(n,{A:()=>r})},4439:(t,n,e)=>{e.d(n,{A:()=>l});var r=e(5917),i=e(8946),o=e(6343),u=e(8640),a=e(1509),s=e(9206);function l(t,n,e){var l=null,c=(0,i.A)(!0),h=null,f=o.A,p=null,_=(0,a.i)(g);function g(i){var o,u,a,s,g,y=(i=(0,r.A)(i)).length,d=!1,v=new Array(y),m=new Array(y);for(null==h&&(p=f(g=_())),o=0;o<=y;++o){if(!(o<y&&c(s=i[o],o,i))===d)if(d=!d)u=o,p.areaStart(),p.lineStart();else{for(p.lineEnd(),p.lineStart(),a=o-1;a>=u;--a)p.point(v[a],m[a]);p.lineEnd(),p.areaEnd()}d&&(v[o]=+t(s,o,i),m[o]=+n(s,o,i),p.point(l?+l(s,o,i):v[o],e?+e(s,o,i):m[o]))}if(g)return p=null,g+""||null}function y(){return(0,u.A)().defined(c).curve(f).context(h)}return t="function"==typeof t?t:void 0===t?s.x:(0,i.A)(+t),n="function"==typeof n?n:void 0===n?(0,i.A)(0):(0,i.A)(+n),e="function"==typeof e?e:void 0===e?s.y:(0,i.A)(+e),g.x=function(n){return arguments.length?(t="function"==typeof n?n:(0,i.A)(+n),l=null,g):t},g.x0=function(n){return arguments.length?(t="function"==typeof n?n:(0,i.A)(+n),g):t},g.x1=function(t){return arguments.length?(l=null==t?null:"function"==typeof t?t:(0,i.A)(+t),g):l},g.y=function(t){return arguments.length?(n="function"==typeof t?t:(0,i.A)(+t),e=null,g):n},g.y0=function(t){return arguments.length?(n="function"==typeof t?t:(0,i.A)(+t),g):n},g.y1=function(t){return arguments.length?(e=null==t?null:"function"==typeof t?t:(0,i.A)(+t),g):e},g.lineX0=g.lineY0=function(){return y().x(t).y(n)},g.lineY1=function(){return y().x(t).y(e)},g.lineX1=function(){return y().x(l).y(n)},g.defined=function(t){return arguments.length?(c="function"==typeof t?t:(0,i.A)(!!t),g):c},g.curve=function(t){return arguments.length?(f=t,null!=h&&(p=f(h)),g):f},g.context=function(t){return arguments.length?(null==t?h=p=null:p=f(h=t),g):h},g}},544:(t,n,e)=>{e.d(n,{A:()=>u});var r=e(5529),i=e(4439),o=e(4319);function u(){var t=(0,i.A)().curve(r.Q),n=t.curve,e=t.lineX0,u=t.lineX1,a=t.lineY0,s=t.lineY1;return t.angle=t.x,delete t.x,t.startAngle=t.x0,delete t.x0,t.endAngle=t.x1,delete t.x1,t.radius=t.y,delete t.y,t.innerRadius=t.y0,delete t.y0,t.outerRadius=t.y1,delete t.y1,t.lineStartAngle=function(){return(0,o.y)(e())},delete t.lineX0,t.lineEndAngle=function(){return(0,o.y)(u())},delete t.lineX1,t.lineInnerRadius=function(){return(0,o.y)(a())},delete t.lineY0,t.lineOuterRadius=function(){return(0,o.y)(s())},delete t.lineY1,t.curve=function(t){return arguments.length?n((0,r.A)(t)):n()._curve},t}},5917:(t,n,e)=>{function r(t){return"object"==typeof t&&"length"in t?t:Array.from(t)}e.d(n,{A:()=>r}),Array.prototype.slice},8946:(t,n,e)=>{function r(t){return function(){return t}}e.d(n,{A:()=>r})},6343:(t,n,e)=>{function r(t){this._context=t}function i(t){return new r(t)}e.d(n,{A:()=>i}),r.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;default:this._context.lineTo(t,n)}}}},3150:(t,n,e)=>{function r(){}function i(t){this._context=t}function o(t){return new i(t)}e.d(n,{A:()=>o}),i.prototype={areaStart:r,areaEnd:r,lineStart:function(){this._point=0},lineEnd:function(){this._point&&this._context.closePath()},point:function(t,n){t=+t,n=+n,this._point?this._context.lineTo(t,n):(this._point=1,this._context.moveTo(t,n))}}},5529:(t,n,e)=>{e.d(n,{A:()=>o,Q:()=>r});var r=o(e(6343).A);function i(t){this._curve=t}function o(t){function n(n){return new i(t(n))}return n._curve=t,n}i.prototype={areaStart:function(){this._curve.areaStart()},areaEnd:function(){this._curve.areaEnd()},lineStart:function(){this._curve.lineStart()},lineEnd:function(){this._curve.lineEnd()},point:function(t,n){this._curve.point(n*Math.sin(t),n*-Math.cos(t))}}},8640:(t,n,e)=>{e.d(n,{A:()=>s});var r=e(5917),i=e(8946),o=e(6343),u=e(1509),a=e(9206);function s(t,n){var e=(0,i.A)(!0),s=null,l=o.A,c=null,h=(0,u.i)(f);function f(i){var o,u,a,f=(i=(0,r.A)(i)).length,p=!1;for(null==s&&(c=l(a=h())),o=0;o<=f;++o)!(o<f&&e(u=i[o],o,i))===p&&((p=!p)?c.lineStart():c.lineEnd()),p&&c.point(+t(u,o,i),+n(u,o,i));if(a)return c=null,a+""||null}return t="function"==typeof t?t:void 0===t?a.x:(0,i.A)(t),n="function"==typeof n?n:void 0===n?a.y:(0,i.A)(n),f.x=function(n){return arguments.length?(t="function"==typeof n?n:(0,i.A)(+n),f):t},f.y=function(t){return arguments.length?(n="function"==typeof t?t:(0,i.A)(+t),f):n},f.defined=function(t){return arguments.length?(e="function"==typeof t?t:(0,i.A)(!!t),f):e},f.curve=function(t){return arguments.length?(l=t,null!=s&&(c=l(s)),f):l},f.context=function(t){return arguments.length?(null==t?s=c=null:c=l(s=t),f):s},f}},4319:(t,n,e)=>{e.d(n,{A:()=>u,y:()=>o});var r=e(5529),i=e(8640);function o(t){var n=t.curve;return t.angle=t.x,delete t.x,t.radius=t.y,delete t.y,t.curve=function(t){return arguments.length?n((0,r.A)(t)):n()._curve},t}function u(){return o((0,i.A)().curve(r.Q))}},1509:(t,n,e)=>{e.d(n,{i:()=>l});const r=Math.PI,i=2*r,o=1e-6,u=i-o;function a(t){this._+=t[0];for(let n=1,e=t.length;n<e;++n)this._+=arguments[n]+t[n]}class s{constructor(t){this._x0=this._y0=this._x1=this._y1=null,this._="",this._append=null==t?a:function(t){let n=Math.floor(t);if(!(n>=0))throw new Error(`invalid digits: ${t}`);if(n>15)return a;const e=10**n;return function(t){this._+=t[0];for(let n=1,r=t.length;n<r;++n)this._+=Math.round(arguments[n]*e)/e+t[n]}}(t)}moveTo(t,n){this._append`M${this._x0=this._x1=+t},${this._y0=this._y1=+n}`}closePath(){null!==this._x1&&(this._x1=this._x0,this._y1=this._y0,this._append`Z`)}lineTo(t,n){this._append`L${this._x1=+t},${this._y1=+n}`}quadraticCurveTo(t,n,e,r){this._append`Q${+t},${+n},${this._x1=+e},${this._y1=+r}`}bezierCurveTo(t,n,e,r,i,o){this._append`C${+t},${+n},${+e},${+r},${this._x1=+i},${this._y1=+o}`}arcTo(t,n,e,i,u){if(t=+t,n=+n,e=+e,i=+i,(u=+u)<0)throw new Error(`negative radius: ${u}`);let a=this._x1,s=this._y1,l=e-t,c=i-n,h=a-t,f=s-n,p=h*h+f*f;if(null===this._x1)this._append`M${this._x1=t},${this._y1=n}`;else if(p>o)if(Math.abs(f*l-c*h)>o&&u){let _=e-a,g=i-s,y=l*l+c*c,d=_*_+g*g,v=Math.sqrt(y),m=Math.sqrt(p),w=u*Math.tan((r-Math.acos((y+p-d)/(2*v*m)))/2),x=w/m,A=w/v;Math.abs(x-1)>o&&this._append`L${t+x*h},${n+x*f}`,this._append`A${u},${u},0,0,${+(f*_>h*g)},${this._x1=t+A*l},${this._y1=n+A*c}`}else this._append`L${this._x1=t},${this._y1=n}`}arc(t,n,e,a,s,l){if(t=+t,n=+n,l=!!l,(e=+e)<0)throw new Error(`negative radius: ${e}`);let c=e*Math.cos(a),h=e*Math.sin(a),f=t+c,p=n+h,_=1^l,g=l?a-s:s-a;null===this._x1?this._append`M${f},${p}`:(Math.abs(this._x1-f)>o||Math.abs(this._y1-p)>o)&&this._append`L${f},${p}`,e&&(g<0&&(g=g%i+i),g>u?this._append`A${e},${e},0,1,${_},${t-c},${n-h}A${e},${e},0,1,${_},${this._x1=f},${this._y1=p}`:g>o&&this._append`A${e},${e},0,${+(g>=r)},${_},${this._x1=t+e*Math.cos(s)},${this._y1=n+e*Math.sin(s)}`)}rect(t,n,e,r){this._append`M${this._x0=this._x1=+t},${this._y0=this._y1=+n}h${e=+e}v${+r}h${-e}Z`}toString(){return this._}}function l(t){let n=3;return t.digits=function(e){if(!arguments.length)return n;if(null==e)n=null;else{const t=Math.floor(e);if(!(t>=0))throw new RangeError(`invalid digits: ${e}`);n=t}return t},()=>new s(n)}s.prototype},9206:(t,n,e)=>{function r(t){return t[0]}function i(t){return t[1]}e.d(n,{x:()=>r,y:()=>i})},1321:(t,n,e)=>{function r(t,n){return[(n=+n)*Math.cos(t-=Math.PI/2),n*Math.sin(t)]}e.d(n,{A:()=>r})},8848:(t,n,e)=>{e.d(n,{JLW:()=>cn,l78:()=>s.l7,V4s:()=>s.V4,eH3:()=>s.eH,ylB:()=>r.A,y8u:()=>pn,oDi:()=>gn,nVG:()=>An,Xf2:()=>Tn,GZz:()=>Cn,T9B:()=>i,jkA:()=>o,y17:()=>u,WH:()=>jt,m4Y:()=>qt.A,UMr:()=>Lt,afO:()=>Xt.A,zt:()=>zt,t$z:()=>En,ZcS:()=>a.Ay});var r=e(321);function i(t,n){let e;if(void 0===n)for(const n of t)null!=n&&(e<n||void 0===e&&n>=n)&&(e=n);else{let r=-1;for(let i of t)null!=(i=n(i,++r,t))&&(e<i||void 0===e&&i>=i)&&(e=i)}return e}function o(t,n){let e;if(void 0===n)for(const n of t)null!=n&&(e>n||void 0===e&&n>=n)&&(e=n);else{let r=-1;for(let i of t)null!=(i=n(i,++r,t))&&(e>i||void 0===e&&i>=i)&&(e=i)}return e}function u(t,n,e){t=+t,n=+n,e=(i=arguments.length)<2?(n=t,t=0,1):i<3?1:+e;for(var r=-1,i=0|Math.max(0,Math.ceil((n-t)/e)),o=new Array(i);++r<i;)o[r]=t+r*e;return o}var a=e(6946),s=e(90),l=e(6108),c={value:()=>{}};function h(){for(var t,n=0,e=arguments.length,r={};n<e;++n){if(!(t=arguments[n]+"")||t in r||/[\s.]/.test(t))throw new Error("illegal type: "+t);r[t]=[]}return new f(r)}function f(t){this._=t}function p(t,n){for(var e,r=0,i=t.length;r<i;++r)if((e=t[r]).name===n)return e.value}function _(t,n,e){for(var r=0,i=t.length;r<i;++r)if(t[r].name===n){t[r]=c,t=t.slice(0,r).concat(t.slice(r+1));break}return null!=e&&t.push({name:n,value:e}),t}f.prototype=h.prototype={constructor:f,on:function(t,n){var e,r,i=this._,o=(r=i,(t+"").trim().split(/^|\s+/).map((function(t){var n="",e=t.indexOf(".");if(e>=0&&(n=t.slice(e+1),t=t.slice(0,e)),t&&!r.hasOwnProperty(t))throw new Error("unknown type: "+t);return{type:t,name:n}}))),u=-1,a=o.length;if(!(arguments.length<2)){if(null!=n&&"function"!=typeof n)throw new Error("invalid callback: "+n);for(;++u<a;)if(e=(t=o[u]).type)i[e]=_(i[e],t.name,n);else if(null==n)for(e in i)i[e]=_(i[e],t.name,null);return this}for(;++u<a;)if((e=(t=o[u]).type)&&(e=p(i[e],t.name)))return e},copy:function(){var t={},n=this._;for(var e in n)t[e]=n[e].slice();return new f(t)},call:function(t,n){if((e=arguments.length-2)>0)for(var e,r,i=new Array(e),o=0;o<e;++o)i[o]=arguments[o+2];if(!this._.hasOwnProperty(t))throw new Error("unknown type: "+t);for(o=0,e=(r=this._[t]).length;o<e;++o)r[o].value.apply(n,i)},apply:function(t,n,e){if(!this._.hasOwnProperty(t))throw new Error("unknown type: "+t);for(var r=this._[t],i=0,o=r.length;i<o;++i)r[i].value.apply(n,e)}};const g=h;var y,d,v=0,m=0,w=0,x=1e3,A=0,M=0,b=0,T="object"==typeof performance&&performance.now?performance:Date,k="object"==typeof window&&window.requestAnimationFrame?window.requestAnimationFrame.bind(window):function(t){setTimeout(t,17)};function C(){return M||(k(N),M=T.now()+b)}function N(){M=0}function $(){this._call=this._time=this._next=null}function S(t,n,e){var r=new $;return r.restart(t,n,e),r}function D(){M=(A=T.now())+b,v=m=0;try{!function(){C(),++v;for(var t,n=y;n;)(t=M-n._time)>=0&&n._call.call(void 0,t),n=n._next;--v}()}finally{v=0,function(){for(var t,n,e=y,r=1/0;e;)e._call?(r>e._time&&(r=e._time),t=e,e=e._next):(n=e._next,e._next=null,e=t?t._next=n:y=n);d=t,E(r)}(),M=0}}function U(){var t=T.now(),n=t-A;n>x&&(b-=n,A=t)}function E(t){v||(m&&(m=clearTimeout(m)),t-M>24?(t<1/0&&(m=setTimeout(D,t-T.now()-b)),w&&(w=clearInterval(w))):(w||(A=T.now(),w=setInterval(U,x)),v=1,k(D)))}function Y(t,n,e){var r=new $;return n=null==n?0:+n,r.restart((e=>{r.stop(),t(e+n)}),n,e),r}$.prototype=S.prototype={constructor:$,restart:function(t,n,e){if("function"!=typeof t)throw new TypeError("callback is not a function");e=(null==e?C():+e)+(null==n?0:+n),this._next||d===this||(d?d._next=this:y=this,d=this),this._call=t,this._time=e,E()},stop:function(){this._call&&(this._call=null,this._time=1/0,E())}};var F=g("start","end","cancel","interrupt"),H=[],P=0,L=3;function j(t,n,e,r,i,o){var u=t.__transition;if(u){if(e in u)return}else t.__transition={};!function(t,n,e){var r,i=t.__transition;function o(s){var l,c,h,f;if(1!==e.state)return a();for(l in i)if((f=i[l]).name===e.name){if(f.state===L)return Y(o);4===f.state?(f.state=6,f.timer.stop(),f.on.call("interrupt",t,t.__data__,f.index,f.group),delete i[l]):+l<n&&(f.state=6,f.timer.stop(),f.on.call("cancel",t,t.__data__,f.index,f.group),delete i[l])}if(Y((function(){e.state===L&&(e.state=4,e.timer.restart(u,e.delay,e.time),u(s))})),e.state=2,e.on.call("start",t,t.__data__,e.index,e.group),2===e.state){for(e.state=L,r=new Array(h=e.tween.length),l=0,c=-1;l<h;++l)(f=e.tween[l].value.call(t,t.__data__,e.index,e.group))&&(r[++c]=f);r.length=c+1}}function u(n){for(var i=n<e.duration?e.ease.call(null,n/e.duration):(e.timer.restart(a),e.state=5,1),o=-1,u=r.length;++o<u;)r[o].call(t,i);5===e.state&&(e.on.call("end",t,t.__data__,e.index,e.group),a())}function a(){for(var r in e.state=6,e.timer.stop(),delete i[n],i)return;delete t.__transition}i[n]=e,e.timer=S((function(t){e.state=1,e.timer.restart(o,e.delay,e.time),e.delay<=t&&o(t-e.delay)}),0,e.time)}(t,e,{name:n,index:r,group:i,on:F,tween:H,time:o.time,delay:o.delay,duration:o.duration,ease:o.ease,timer:null,state:P})}function q(t,n){var e=z(t,n);if(e.state>P)throw new Error("too late; already scheduled");return e}function X(t,n){var e=z(t,n);if(e.state>L)throw new Error("too late; already running");return e}function z(t,n){var e=t.__transition;if(!e||!(e=e[n]))throw new Error("transition not found");return e}var O,R=e(8981),V=180/Math.PI,I={translateX:0,translateY:0,rotate:0,skewX:0,scaleX:1,scaleY:1};function Z(t,n,e,r,i,o){var u,a,s;return(u=Math.sqrt(t*t+n*n))&&(t/=u,n/=u),(s=t*e+n*r)&&(e-=t*s,r-=n*s),(a=Math.sqrt(e*e+r*r))&&(e/=a,r/=a,s/=a),t*r<n*e&&(t=-t,n=-n,s=-s,u=-u),{translateX:i,translateY:o,rotate:Math.atan2(n,t)*V,skewX:Math.atan(s)*V,scaleX:u,scaleY:a}}function B(t,n,e,r){function i(t){return t.length?t.pop()+" ":""}return function(o,u){var a=[],s=[];return o=t(o),u=t(u),function(t,r,i,o,u,a){if(t!==i||r!==o){var s=u.push("translate(",null,n,null,e);a.push({i:s-4,x:(0,R.A)(t,i)},{i:s-2,x:(0,R.A)(r,o)})}else(i||o)&&u.push("translate("+i+n+o+e)}(o.translateX,o.translateY,u.translateX,u.translateY,a,s),function(t,n,e,o){t!==n?(t-n>180?n+=360:n-t>180&&(t+=360),o.push({i:e.push(i(e)+"rotate(",null,r)-2,x:(0,R.A)(t,n)})):n&&e.push(i(e)+"rotate("+n+r)}(o.rotate,u.rotate,a,s),function(t,n,e,o){t!==n?o.push({i:e.push(i(e)+"skewX(",null,r)-2,x:(0,R.A)(t,n)}):n&&e.push(i(e)+"skewX("+n+r)}(o.skewX,u.skewX,a,s),function(t,n,e,r,o,u){if(t!==e||n!==r){var a=o.push(i(o)+"scale(",null,",",null,")");u.push({i:a-4,x:(0,R.A)(t,e)},{i:a-2,x:(0,R.A)(n,r)})}else 1===e&&1===r||o.push(i(o)+"scale("+e+","+r+")")}(o.scaleX,o.scaleY,u.scaleX,u.scaleY,a,s),o=u=null,function(t){for(var n,e=-1,r=s.length;++e<r;)a[(n=s[e]).i]=n.x(t);return a.join("")}}}var Q=B((function(t){const n=new("function"==typeof DOMMatrix?DOMMatrix:WebKitCSSMatrix)(t+"");return n.isIdentity?I:Z(n.a,n.b,n.c,n.d,n.e,n.f)}),"px, ","px)","deg)"),W=B((function(t){return null==t?I:(O||(O=document.createElementNS("http://www.w3.org/2000/svg","g")),O.setAttribute("transform",t),(t=O.transform.baseVal.consolidate())?Z((t=t.matrix).a,t.b,t.c,t.d,t.e,t.f):I)}),", ",")",")"),G=e(7268);function J(t,n){var e,r;return function(){var i=X(this,t),o=i.tween;if(o!==e)for(var u=0,a=(r=e=o).length;u<a;++u)if(r[u].name===n){(r=r.slice()).splice(u,1);break}i.tween=r}}function K(t,n,e){var r,i;if("function"!=typeof e)throw new Error;return function(){var o=X(this,t),u=o.tween;if(u!==r){i=(r=u).slice();for(var a={name:n,value:e},s=0,l=i.length;s<l;++s)if(i[s].name===n){i[s]=a;break}s===l&&i.push(a)}o.tween=i}}function tt(t,n,e){var r=t._id;return t.each((function(){var t=X(this,r);(t.value||(t.value={}))[n]=e.apply(this,arguments)})),function(t){return z(t,r).value[n]}}var nt=e(5315),et=e(3377),rt=e(7737);function it(t,n){var e;return("number"==typeof n?R.A:n instanceof nt.Ay?et.Ay:(e=(0,nt.Ay)(n))?(n=e,et.Ay):rt.A)(t,n)}function ot(t){return function(){this.removeAttribute(t)}}function ut(t){return function(){this.removeAttributeNS(t.space,t.local)}}function at(t,n,e){var r,i,o=e+"";return function(){var u=this.getAttribute(t);return u===o?null:u===r?i:i=n(r=u,e)}}function st(t,n,e){var r,i,o=e+"";return function(){var u=this.getAttributeNS(t.space,t.local);return u===o?null:u===r?i:i=n(r=u,e)}}function lt(t,n,e){var r,i,o;return function(){var u,a,s=e(this);if(null!=s)return(u=this.getAttribute(t))===(a=s+"")?null:u===r&&a===i?o:(i=a,o=n(r=u,s));this.removeAttribute(t)}}function ct(t,n,e){var r,i,o;return function(){var u,a,s=e(this);if(null!=s)return(u=this.getAttributeNS(t.space,t.local))===(a=s+"")?null:u===r&&a===i?o:(i=a,o=n(r=u,s));this.removeAttributeNS(t.space,t.local)}}function ht(t,n){var e,r;function i(){var i=n.apply(this,arguments);return i!==r&&(e=(r=i)&&function(t,n){return function(e){this.setAttributeNS(t.space,t.local,n.call(this,e))}}(t,i)),e}return i._value=n,i}function ft(t,n){var e,r;function i(){var i=n.apply(this,arguments);return i!==r&&(e=(r=i)&&function(t,n){return function(e){this.setAttribute(t,n.call(this,e))}}(t,i)),e}return i._value=n,i}function pt(t,n){return function(){q(this,t).delay=+n.apply(this,arguments)}}function _t(t,n){return n=+n,function(){q(this,t).delay=n}}function gt(t,n){return function(){X(this,t).duration=+n.apply(this,arguments)}}function yt(t,n){return n=+n,function(){X(this,t).duration=n}}var dt=e(6541),vt=e(574),mt=e(747),wt=l.Ay.prototype.constructor,xt=e(3683);function At(t){return function(){this.style.removeProperty(t)}}var Mt=0;function bt(t,n,e,r){this._groups=t,this._parents=n,this._name=e,this._id=r}function Tt(){return++Mt}var kt=l.Ay.prototype;bt.prototype=function(t){return(0,l.Ay)().transition(t)}.prototype={constructor:bt,select:function(t){var n=this._name,e=this._id;"function"!=typeof t&&(t=(0,vt.A)(t));for(var r=this._groups,i=r.length,o=new Array(i),u=0;u<i;++u)for(var a,s,l=r[u],c=l.length,h=o[u]=new Array(c),f=0;f<c;++f)(a=l[f])&&(s=t.call(a,a.__data__,f,l))&&("__data__"in a&&(s.__data__=a.__data__),h[f]=s,j(h[f],n,e,f,h,z(a,e)));return new bt(o,this._parents,n,e)},selectAll:function(t){var n=this._name,e=this._id;"function"!=typeof t&&(t=(0,mt.A)(t));for(var r=this._groups,i=r.length,o=[],u=[],a=0;a<i;++a)for(var s,l=r[a],c=l.length,h=0;h<c;++h)if(s=l[h]){for(var f,p=t.call(s,s.__data__,h,l),_=z(s,e),g=0,y=p.length;g<y;++g)(f=p[g])&&j(f,n,e,g,p,_);o.push(p),u.push(s)}return new bt(o,u,n,e)},selectChild:kt.selectChild,selectChildren:kt.selectChildren,filter:function(t){"function"!=typeof t&&(t=(0,dt.A)(t));for(var n=this._groups,e=n.length,r=new Array(e),i=0;i<e;++i)for(var o,u=n[i],a=u.length,s=r[i]=[],l=0;l<a;++l)(o=u[l])&&t.call(o,o.__data__,l,u)&&s.push(o);return new bt(r,this._parents,this._name,this._id)},merge:function(t){if(t._id!==this._id)throw new Error;for(var n=this._groups,e=t._groups,r=n.length,i=e.length,o=Math.min(r,i),u=new Array(r),a=0;a<o;++a)for(var s,l=n[a],c=e[a],h=l.length,f=u[a]=new Array(h),p=0;p<h;++p)(s=l[p]||c[p])&&(f[p]=s);for(;a<r;++a)u[a]=n[a];return new bt(u,this._parents,this._name,this._id)},selection:function(){return new wt(this._groups,this._parents)},transition:function(){for(var t=this._name,n=this._id,e=Tt(),r=this._groups,i=r.length,o=0;o<i;++o)for(var u,a=r[o],s=a.length,l=0;l<s;++l)if(u=a[l]){var c=z(u,n);j(u,t,e,l,a,{time:c.time+c.delay+c.duration,delay:0,duration:c.duration,ease:c.ease})}return new bt(r,this._parents,t,e)},call:kt.call,nodes:kt.nodes,node:kt.node,size:kt.size,empty:kt.empty,each:kt.each,on:function(t,n){var e=this._id;return arguments.length<2?z(this.node(),e).on.on(t):this.each(function(t,n,e){var r,i,o=function(t){return(t+"").trim().split(/^|\s+/).every((function(t){var n=t.indexOf(".");return n>=0&&(t=t.slice(0,n)),!t||"start"===t}))}(n)?q:X;return function(){var u=o(this,t),a=u.on;a!==r&&(i=(r=a).copy()).on(n,e),u.on=i}}(e,t,n))},attr:function(t,n){var e=(0,G.A)(t),r="transform"===e?W:it;return this.attrTween(t,"function"==typeof n?(e.local?ct:lt)(e,r,tt(this,"attr."+t,n)):null==n?(e.local?ut:ot)(e):(e.local?st:at)(e,r,n))},attrTween:function(t,n){var e="attr."+t;if(arguments.length<2)return(e=this.tween(e))&&e._value;if(null==n)return this.tween(e,null);if("function"!=typeof n)throw new Error;var r=(0,G.A)(t);return this.tween(e,(r.local?ht:ft)(r,n))},style:function(t,n,e){var r="transform"==(t+="")?Q:it;return null==n?this.styleTween(t,function(t,n){var e,r,i;return function(){var o=(0,xt.j)(this,t),u=(this.style.removeProperty(t),(0,xt.j)(this,t));return o===u?null:o===e&&u===r?i:i=n(e=o,r=u)}}(t,r)).on("end.style."+t,At(t)):"function"==typeof n?this.styleTween(t,function(t,n,e){var r,i,o;return function(){var u=(0,xt.j)(this,t),a=e(this),s=a+"";return null==a&&(this.style.removeProperty(t),s=a=(0,xt.j)(this,t)),u===s?null:u===r&&s===i?o:(i=s,o=n(r=u,a))}}(t,r,tt(this,"style."+t,n))).each(function(t,n){var e,r,i,o,u="style."+n,a="end."+u;return function(){var s=X(this,t),l=s.on,c=null==s.value[u]?o||(o=At(n)):void 0;l===e&&i===c||(r=(e=l).copy()).on(a,i=c),s.on=r}}(this._id,t)):this.styleTween(t,function(t,n,e){var r,i,o=e+"";return function(){var u=(0,xt.j)(this,t);return u===o?null:u===r?i:i=n(r=u,e)}}(t,r,n),e).on("end.style."+t,null)},styleTween:function(t,n,e){var r="style."+(t+="");if(arguments.length<2)return(r=this.tween(r))&&r._value;if(null==n)return this.tween(r,null);if("function"!=typeof n)throw new Error;return this.tween(r,function(t,n,e){var r,i;function o(){var o=n.apply(this,arguments);return o!==i&&(r=(i=o)&&function(t,n,e){return function(r){this.style.setProperty(t,n.call(this,r),e)}}(t,o,e)),r}return o._value=n,o}(t,n,null==e?"":e))},text:function(t){return this.tween("text","function"==typeof t?function(t){return function(){var n=t(this);this.textContent=null==n?"":n}}(tt(this,"text",t)):function(t){return function(){this.textContent=t}}(null==t?"":t+""))},textTween:function(t){var n="text";if(arguments.length<1)return(n=this.tween(n))&&n._value;if(null==t)return this.tween(n,null);if("function"!=typeof t)throw new Error;return this.tween(n,function(t){var n,e;function r(){var r=t.apply(this,arguments);return r!==e&&(n=(e=r)&&function(t){return function(n){this.textContent=t.call(this,n)}}(r)),n}return r._value=t,r}(t))},remove:function(){return this.on("end.remove",function(t){return function(){var n=this.parentNode;for(var e in this.__transition)if(+e!==t)return;n&&n.removeChild(this)}}(this._id))},tween:function(t,n){var e=this._id;if(t+="",arguments.length<2){for(var r,i=z(this.node(),e).tween,o=0,u=i.length;o<u;++o)if((r=i[o]).name===t)return r.value;return null}return this.each((null==n?J:K)(e,t,n))},delay:function(t){var n=this._id;return arguments.length?this.each(("function"==typeof t?pt:_t)(n,t)):z(this.node(),n).delay},duration:function(t){var n=this._id;return arguments.length?this.each(("function"==typeof t?gt:yt)(n,t)):z(this.node(),n).duration},ease:function(t){var n=this._id;return arguments.length?this.each(function(t,n){if("function"!=typeof n)throw new Error;return function(){X(this,t).ease=n}}(n,t)):z(this.node(),n).ease},easeVarying:function(t){if("function"!=typeof t)throw new Error;return this.each(function(t,n){return function(){var e=n.apply(this,arguments);if("function"!=typeof e)throw new Error;X(this,t).ease=e}}(this._id,t))},end:function(){var t,n,e=this,r=e._id,i=e.size();return new Promise((function(o,u){var a={value:u},s={value:function(){0==--i&&o()}};e.each((function(){var e=X(this,r),i=e.on;i!==t&&((n=(t=i).copy())._.cancel.push(a),n._.interrupt.push(a),n._.end.push(s)),e.on=n})),0===i&&o()}))},[Symbol.iterator]:kt[Symbol.iterator]};var Ct={time:null,delay:0,duration:250,ease:function(t){return((t*=2)<=1?t*t*t:(t-=2)*t*t+2)/2}};function Nt(t,n){for(var e;!(e=t.__transition)||!(e=e[n]);)if(!(t=t.parentNode))throw new Error(`transition ${n} not found`);return e}l.Ay.prototype.interrupt=function(t){return this.each((function(){!function(t,n){var e,r,i,o=t.__transition,u=!0;if(o){for(i in n=null==n?null:n+"",o)(e=o[i]).name===n?(r=e.state>2&&e.state<5,e.state=6,e.timer.stop(),e.on.call(r?"interrupt":"cancel",t,t.__data__,e.index,e.group),delete o[i]):u=!1;u&&delete t.__transition}}(this,t)}))},l.Ay.prototype.transition=function(t){var n,e;t instanceof bt?(n=t._id,t=t._name):(n=Tt(),(e=Ct).time=C(),t=null==t?null:t+"");for(var r=this._groups,i=r.length,o=0;o<i;++o)for(var u,a=r[o],s=a.length,l=0;l<s;++l)(u=a[l])&&j(u,t,n,l,a,e||Nt(u,n));return new bt(r,this._parents,t,n)};const{abs:$t,max:St,min:Dt}=Math;function Ut(t){return{type:t}}["w","e"].map(Ut),["n","s"].map(Ut),["n","w","e","s","nw","ne","sw","se"].map(Ut);var Et=e(9065);class Yt extends Map{constructor(t,n=Ht){if(super(),Object.defineProperties(this,{_intern:{value:new Map},_key:{value:n}}),null!=t)for(const[n,e]of t)this.set(n,e)}get(t){return super.get(Ft(this,t))}has(t){return super.has(Ft(this,t))}set(t,n){return super.set(function({_intern:t,_key:n},e){const r=n(e);return t.has(r)?t.get(r):(t.set(r,e),e)}(this,t),n)}delete(t){return super.delete(function({_intern:t,_key:n},e){const r=n(e);return t.has(r)&&(e=t.get(r),t.delete(r)),e}(this,t))}}function Ft({_intern:t,_key:n},e){const r=n(e);return t.has(r)?t.get(r):e}function Ht(t){return null!==t&&"object"==typeof t?t.valueOf():t}Set;const Pt=Symbol("implicit");function Lt(){var t=new Yt,n=[],e=[],r=Pt;function i(i){let o=t.get(i);if(void 0===o){if(r!==Pt)return r;t.set(i,o=n.push(i)-1)}return e[o%e.length]}return i.domain=function(e){if(!arguments.length)return n.slice();n=[],t=new Yt;for(const r of e)t.has(r)||t.set(r,n.push(r)-1);return i},i.range=function(t){return arguments.length?(e=Array.from(t),i):e.slice()},i.unknown=function(t){return arguments.length?(r=t,i):r},i.copy=function(){return Lt(n,e).unknown(r)},Et.C.apply(i,arguments),i}function jt(){var t,n,e=Lt().unknown(void 0),r=e.domain,i=e.range,o=0,a=1,s=!1,l=0,c=0,h=.5;function f(){var e=r().length,f=a<o,p=f?a:o,_=f?o:a;t=(_-p)/Math.max(1,e-l+2*c),s&&(t=Math.floor(t)),p+=(_-p-t*(e-l))*h,n=t*(1-l),s&&(p=Math.round(p),n=Math.round(n));var g=u(e).map((function(n){return p+t*n}));return i(f?g.reverse():g)}return delete e.unknown,e.domain=function(t){return arguments.length?(r(t),f()):r()},e.range=function(t){return arguments.length?([o,a]=t,o=+o,a=+a,f()):[o,a]},e.rangeRound=function(t){return[o,a]=t,o=+o,a=+a,s=!0,f()},e.bandwidth=function(){return n},e.step=function(){return t},e.round=function(t){return arguments.length?(s=!!t,f()):s},e.padding=function(t){return arguments.length?(l=Math.min(1,c=+t),f()):l},e.paddingInner=function(t){return arguments.length?(l=Math.min(1,t),f()):l},e.paddingOuter=function(t){return arguments.length?(c=+t,f()):c},e.align=function(t){return arguments.length?(h=Math.max(0,Math.min(1,t)),f()):h},e.copy=function(){return jt(r(),[o,a]).round(s).paddingInner(l).paddingOuter(c).align(h)},Et.C.apply(f(),arguments)}var qt=e(5969),Xt=e(5900);const zt=function(t){for(var n=new Array(10),e=0;e<10;)n[e]="#"+t.slice(6*e,6*++e);return n}("4e79a7f28e2ce1575976b7b259a14fedc949af7aa1ff9da79c755fbab0ab");var Ot=e(8946);const Rt=Math.abs,Vt=Math.atan2,It=Math.cos,Zt=Math.max,Bt=Math.min,Qt=Math.sin,Wt=Math.sqrt,Gt=1e-12,Jt=Math.PI,Kt=Jt/2,tn=2*Jt;function nn(t){return t>=1?Kt:t<=-1?-Kt:Math.asin(t)}var en=e(1509);function rn(t){return t.innerRadius}function on(t){return t.outerRadius}function un(t){return t.startAngle}function an(t){return t.endAngle}function sn(t){return t&&t.padAngle}function ln(t,n,e,r,i,o,u){var a=t-e,s=n-r,l=(u?o:-o)/Wt(a*a+s*s),c=l*s,h=-l*a,f=t+c,p=n+h,_=e+c,g=r+h,y=(f+_)/2,d=(p+g)/2,v=_-f,m=g-p,w=v*v+m*m,x=i-o,A=f*g-_*p,M=(m<0?-1:1)*Wt(Zt(0,x*x*w-A*A)),b=(A*m-v*M)/w,T=(-A*v-m*M)/w,k=(A*m+v*M)/w,C=(-A*v+m*M)/w,N=b-y,$=T-d,S=k-y,D=C-d;return N*N+$*$>S*S+D*D&&(b=k,T=C),{cx:b,cy:T,x01:-c,y01:-h,x11:b*(i/x-1),y11:T*(i/x-1)}}function cn(){var t=rn,n=on,e=(0,Ot.A)(0),r=null,i=un,o=an,u=sn,a=null,s=(0,en.i)(l);function l(){var l,c,h,f=+t.apply(this,arguments),p=+n.apply(this,arguments),_=i.apply(this,arguments)-Kt,g=o.apply(this,arguments)-Kt,y=Rt(g-_),d=g>_;if(a||(a=l=s()),p<f&&(c=p,p=f,f=c),p>Gt)if(y>tn-Gt)a.moveTo(p*It(_),p*Qt(_)),a.arc(0,0,p,_,g,!d),f>Gt&&(a.moveTo(f*It(g),f*Qt(g)),a.arc(0,0,f,g,_,d));else{var v,m,w=_,x=g,A=_,M=g,b=y,T=y,k=u.apply(this,arguments)/2,C=k>Gt&&(r?+r.apply(this,arguments):Wt(f*f+p*p)),N=Bt(Rt(p-f)/2,+e.apply(this,arguments)),$=N,S=N;if(C>Gt){var D=nn(C/f*Qt(k)),U=nn(C/p*Qt(k));(b-=2*D)>Gt?(A+=D*=d?1:-1,M-=D):(b=0,A=M=(_+g)/2),(T-=2*U)>Gt?(w+=U*=d?1:-1,x-=U):(T=0,w=x=(_+g)/2)}var E=p*It(w),Y=p*Qt(w),F=f*It(M),H=f*Qt(M);if(N>Gt){var P,L=p*It(x),j=p*Qt(x),q=f*It(A),X=f*Qt(A);if(y<Jt)if(P=function(t,n,e,r,i,o,u,a){var s=e-t,l=r-n,c=u-i,h=a-o,f=h*s-c*l;if(!(f*f<Gt))return[t+(f=(c*(n-o)-h*(t-i))/f)*s,n+f*l]}(E,Y,q,X,L,j,F,H)){var z=E-P[0],O=Y-P[1],R=L-P[0],V=j-P[1],I=1/Qt(((h=(z*R+O*V)/(Wt(z*z+O*O)*Wt(R*R+V*V)))>1?0:h<-1?Jt:Math.acos(h))/2),Z=Wt(P[0]*P[0]+P[1]*P[1]);$=Bt(N,(f-Z)/(I-1)),S=Bt(N,(p-Z)/(I+1))}else $=S=0}T>Gt?S>Gt?(v=ln(q,X,E,Y,p,S,d),m=ln(L,j,F,H,p,S,d),a.moveTo(v.cx+v.x01,v.cy+v.y01),S<N?a.arc(v.cx,v.cy,S,Vt(v.y01,v.x01),Vt(m.y01,m.x01),!d):(a.arc(v.cx,v.cy,S,Vt(v.y01,v.x01),Vt(v.y11,v.x11),!d),a.arc(0,0,p,Vt(v.cy+v.y11,v.cx+v.x11),Vt(m.cy+m.y11,m.cx+m.x11),!d),a.arc(m.cx,m.cy,S,Vt(m.y11,m.x11),Vt(m.y01,m.x01),!d))):(a.moveTo(E,Y),a.arc(0,0,p,w,x,!d)):a.moveTo(E,Y),f>Gt&&b>Gt?$>Gt?(v=ln(F,H,L,j,f,-$,d),m=ln(E,Y,q,X,f,-$,d),a.lineTo(v.cx+v.x01,v.cy+v.y01),$<N?a.arc(v.cx,v.cy,$,Vt(v.y01,v.x01),Vt(m.y01,m.x01),!d):(a.arc(v.cx,v.cy,$,Vt(v.y01,v.x01),Vt(v.y11,v.x11),!d),a.arc(0,0,f,Vt(v.cy+v.y11,v.cx+v.x11),Vt(m.cy+m.y11,m.cx+m.x11),d),a.arc(m.cx,m.cy,$,Vt(m.y11,m.x11),Vt(m.y01,m.x01),!d))):a.arc(0,0,f,M,A,d):a.lineTo(F,H)}else a.moveTo(0,0);if(a.closePath(),l)return a=null,l+""||null}return l.centroid=function(){var e=(+t.apply(this,arguments)+ +n.apply(this,arguments))/2,r=(+i.apply(this,arguments)+ +o.apply(this,arguments))/2-Jt/2;return[It(r)*e,Qt(r)*e]},l.innerRadius=function(n){return arguments.length?(t="function"==typeof n?n:(0,Ot.A)(+n),l):t},l.outerRadius=function(t){return arguments.length?(n="function"==typeof t?t:(0,Ot.A)(+t),l):n},l.cornerRadius=function(t){return arguments.length?(e="function"==typeof t?t:(0,Ot.A)(+t),l):e},l.padRadius=function(t){return arguments.length?(r=null==t?null:"function"==typeof t?t:(0,Ot.A)(+t),l):r},l.startAngle=function(t){return arguments.length?(i="function"==typeof t?t:(0,Ot.A)(+t),l):i},l.endAngle=function(t){return arguments.length?(o="function"==typeof t?t:(0,Ot.A)(+t),l):o},l.padAngle=function(t){return arguments.length?(u="function"==typeof t?t:(0,Ot.A)(+t),l):u},l.context=function(t){return arguments.length?(a=null==t?null:t,l):a},l}function hn(t,n,e){t._context.bezierCurveTo(t._x1+t._k*(t._x2-t._x0),t._y1+t._k*(t._y2-t._y0),t._x2+t._k*(t._x1-n),t._y2+t._k*(t._y1-e),t._x2,t._y2)}function fn(t,n){this._context=t,this._k=(1-n)/6}fn.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x2,this._y2);break;case 3:hn(this,this._x1,this._y1)}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2,this._x1=t,this._y1=n;break;case 2:this._point=3;default:hn(this,t,n)}this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}};const pn=function t(n){function e(t){return new fn(t,n)}return e.tension=function(n){return t(+n)},e}(0);function _n(t,n){this._context=t,this._alpha=n}_n.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x2,this._y2);break;case 3:this.point(this._x2,this._y2)}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){if(t=+t,n=+n,this._point){var e=this._x2-t,r=this._y2-n;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(e*e+r*r,this._alpha))}switch(this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;break;case 2:this._point=3;default:!function(t,n,e){var r=t._x1,i=t._y1,o=t._x2,u=t._y2;if(t._l01_a>Gt){var a=2*t._l01_2a+3*t._l01_a*t._l12_a+t._l12_2a,s=3*t._l01_a*(t._l01_a+t._l12_a);r=(r*a-t._x0*t._l12_2a+t._x2*t._l01_2a)/s,i=(i*a-t._y0*t._l12_2a+t._y2*t._l01_2a)/s}if(t._l23_a>Gt){var l=2*t._l23_2a+3*t._l23_a*t._l12_a+t._l12_2a,c=3*t._l23_a*(t._l23_a+t._l12_a);o=(o*l+t._x1*t._l23_2a-n*t._l12_2a)/c,u=(u*l+t._y1*t._l23_2a-e*t._l12_2a)/c}t._context.bezierCurveTo(r,i,o,u,t._x2,t._y2)}(this,t,n)}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}};const gn=function t(n){function e(t){return n?new _n(t,n):new fn(t,0)}return e.alpha=function(n){return t(+n)},e}(.5);function yn(t){return t<0?-1:1}function dn(t,n,e){var r=t._x1-t._x0,i=n-t._x1,o=(t._y1-t._y0)/(r||i<0&&-0),u=(e-t._y1)/(i||r<0&&-0),a=(o*i+u*r)/(r+i);return(yn(o)+yn(u))*Math.min(Math.abs(o),Math.abs(u),.5*Math.abs(a))||0}function vn(t,n){var e=t._x1-t._x0;return e?(3*(t._y1-t._y0)/e-n)/2:n}function mn(t,n,e){var r=t._x0,i=t._y0,o=t._x1,u=t._y1,a=(o-r)/3;t._context.bezierCurveTo(r+a,i+a*n,o-a,u-a*e,o,u)}function wn(t){this._context=t}function xn(t){this._context=t}function An(t){return new wn(t)}function Mn(t){this._context=t}function bn(t){var n,e,r=t.length-1,i=new Array(r),o=new Array(r),u=new Array(r);for(i[0]=0,o[0]=2,u[0]=t[0]+2*t[1],n=1;n<r-1;++n)i[n]=1,o[n]=4,u[n]=4*t[n]+2*t[n+1];for(i[r-1]=2,o[r-1]=7,u[r-1]=8*t[r-1]+t[r],n=1;n<r;++n)e=i[n]/o[n-1],o[n]-=e,u[n]-=e*u[n-1];for(i[r-1]=u[r-1]/o[r-1],n=r-2;n>=0;--n)i[n]=(u[n]-i[n+1])/o[n];for(o[r-1]=(t[r]+i[r-1])/2,n=0;n<r-1;++n)o[n]=2*t[n+1]-i[n+1];return[i,o]}function Tn(t){return new Mn(t)}function kn(t,n){this._context=t,this._t=n}function Cn(t){return new kn(t,.5)}wn.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=this._t0=NaN,this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x1,this._y1);break;case 3:mn(this,this._t0,vn(this,this._t0))}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){var e=NaN;if(n=+n,(t=+t)!==this._x1||n!==this._y1){switch(this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;break;case 2:this._point=3,mn(this,vn(this,e=dn(this,t,n)),e);break;default:mn(this,this._t0,e=dn(this,t,n))}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=n,this._t0=e}}},(function(t){this._context=new xn(t)}.prototype=Object.create(wn.prototype)).point=function(t,n){wn.prototype.point.call(this,n,t)},xn.prototype={moveTo:function(t,n){this._context.moveTo(n,t)},closePath:function(){this._context.closePath()},lineTo:function(t,n){this._context.lineTo(n,t)},bezierCurveTo:function(t,n,e,r,i,o){this._context.bezierCurveTo(n,t,r,e,o,i)}},Mn.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x=[],this._y=[]},lineEnd:function(){var t=this._x,n=this._y,e=t.length;if(e)if(this._line?this._context.lineTo(t[0],n[0]):this._context.moveTo(t[0],n[0]),2===e)this._context.lineTo(t[1],n[1]);else for(var r=bn(t),i=bn(n),o=0,u=1;u<e;++o,++u)this._context.bezierCurveTo(r[0][o],i[0][o],r[1][o],i[1][o],t[u],n[u]);(this._line||0!==this._line&&1===e)&&this._context.closePath(),this._line=1-this._line,this._x=this._y=null},point:function(t,n){this._x.push(+t),this._y.push(+n)}},kn.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x=this._y=NaN,this._point=0},lineEnd:function(){0<this._t&&this._t<1&&2===this._point&&this._context.lineTo(this._x,this._y),(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line>=0&&(this._t=1-this._t,this._line=1-this._line)},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;default:if(this._t<=0)this._context.lineTo(this._x,n),this._context.lineTo(t,n);else{var e=this._x*(1-this._t)+t*this._t;this._context.lineTo(e,this._y),this._context.lineTo(e,n)}}this._x=t,this._y=n}};var Nn=e(5917);function $n(t,n){if((i=t.length)>1)for(var e,r,i,o=1,u=t[n[0]],a=u.length;o<i;++o)for(r=u,u=t[n[o]],e=0;e<a;++e)u[e][1]+=u[e][0]=isNaN(r[e][1])?r[e][0]:r[e][1]}function Sn(t){for(var n=t.length,e=new Array(n);--n>=0;)e[n]=n;return e}function Dn(t,n){return t[n]}function Un(t){const n=[];return n.key=t,n}function En(){var t=(0,Ot.A)([]),n=Sn,e=$n,r=Dn;function i(i){var o,u,a=Array.from(t.apply(this,arguments),Un),s=a.length,l=-1;for(const t of i)for(o=0,++l;o<s;++o)(a[o][l]=[0,+r(t,a[o].key,l,i)]).data=t;for(o=0,u=(0,Nn.A)(n(a));o<s;++o)a[u[o]].index=o;return e(a,u),a}return i.keys=function(n){return arguments.length?(t="function"==typeof n?n:(0,Ot.A)(Array.from(n)),i):t},i.value=function(t){return arguments.length?(r="function"==typeof t?t:(0,Ot.A)(+t),i):r},i.order=function(t){return arguments.length?(n=null==t?Sn:"function"==typeof t?t:(0,Ot.A)(Array.from(t)),i):n},i.offset=function(t){return arguments.length?(e=null==t?$n:t,i):e},i}function Yn(t,n,e){this.k=t,this.x=n,this.y=e}Yn.prototype={constructor:Yn,scale:function(t){return 1===t?this:new Yn(this.k*t,this.x,this.y)},translate:function(t,n){return 0===t&0===n?this:new Yn(this.k,this.x+this.k*t,this.y+this.k*n)},apply:function(t){return[t[0]*this.k+this.x,t[1]*this.k+this.y]},applyX:function(t){return t*this.k+this.x},applyY:function(t){return t*this.k+this.y},invert:function(t){return[(t[0]-this.x)/this.k,(t[1]-this.y)/this.k]},invertX:function(t){return(t-this.x)/this.k},invertY:function(t){return(t-this.y)/this.k},rescaleX:function(t){return t.copy().domain(t.range().map(this.invertX,this).map(t.invert,t))},rescaleY:function(t){return t.copy().domain(t.range().map(this.invertY,this).map(t.invert,t))},toString:function(){return"translate("+this.x+","+this.y+") scale("+this.k+")"}},new Yn(1,0,0),Yn.prototype}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,